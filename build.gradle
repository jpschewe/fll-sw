// -*- java -*-

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.5'
    }
}    

plugins {
	id 'java'
	id 'distribution'
	id "com.dorongold.task-tree" version "1.3.1"
	id 'org.unbroken-dome.test-sets' version "2.1.1"
	id 'eclipse'
}

testSets {
    integrationTest
}
check.dependsOn integrationTest
integrationTest.mustRunAfter test

repositories {
    jcenter()
    flatDir {
      dirs 'gradle-repo'
    }
}

ext {
    jackson_version = "2.9.0"
    slf4j_version = "1.7.5"
    tomcat_version = "9.0.16"
    itext_version = "5.5.13"
    poi_version = "3.10.1"
    
    web_build_dir = new File(project.buildDir, 'web')
    
    mainClassName = 'fll.Launcher'
}

dependencies {
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: project.tomcat_version
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: project.tomcat_version
    compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-websocket', version: project.tomcat_version
    compile group: 'org.apache.tomcat', name: 'tomcat-jasper', version: project.tomcat_version
    compile group: 'org.apache.tomcat', name: 'tomcat-jasper-el', version: project.tomcat_version
    compile group: 'org.apache.tomcat', name: 'tomcat-jsp-api', version: project.tomcat_version

	compile group: "xmlunit", name: "xmlunit", version: "1.4"
	compile group: "org.apache.commons", name: "commons-lang3", version: "3.4"
	compile group: "commons-cli", name: "commons-cli", version: "1.2"
	compile group: "org.hsqldb", name: "hsqldb", version: "2.4.1"
	
	compile group: "com.itextpdf", name: "itextpdf", version: project.itext_version
	
	compile group: "log4j", name: "log4j", version: "1.2.17"
	compile group: "log4j", name: "apache-log4j-extras", version: "1.2.17"
	
	compile group: "org.slf4j", name: "slf4j-api", version: project.slf4j_version
	compile group: "org.slf4j", name: "slf4j-log4j12", version: project.slf4j_version
	
	compile group: "org.apache.poi", name: "poi-ooxml", version: project.poi_version
	
	compile group: "com.google.code.findbugs", name: "annotations", version: "3.0.1"
	compile group: "com.google.code.findbugs", name: "jsr305", version: "3.0.1"
	
	compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: project.jackson_version
	compile group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: project.jackson_version

	compile group: "commons-io", name: "commons-io", version: "2.5"
		
	compile group: "net.sourceforge.schemaspy", name: "schemaspy", version: "5.0.0"
		
	compile group: "dnsjava", name: "dnsjava", version: "2.1.7"
	
	compile group: "commons-fileupload", name: "commons-fileupload", version: "1.3"
	
	compile group: "org.apache.tika", name: "tika-core", version: "1.16"
	
	compile group: "com.diffplug.durian", name: "durian-core", version: "1.1.0"
	
	compile group: "it.sauronsoftware", name: "junique", version: "1.0.4"
		
	compile group: "com.googlecode.log4jdbc", name: "log4jdbc", version: "1.2"
	
	compile group: "net.java.linoleum", name: "jlfgr", version: "1_0"
	
	runtime group: "javax.servlet", name: "jstl", version: "1.2"
	
	// TODO: get these from repositories somewhere
	compile name: "JonsInfra-1.6"
	compile name: "opencsv-jps-2.4"
	
	
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'
    
    // allow integration tests to reference code in the test directory
    integrationTestCompile sourceSets.test.output
        
    integrationTestCompile group: 'org.easytesting', name: 'fest-swing', version: '1.2'
    integrationTestCompile group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.22'
    integrationTestCompile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'
    integrationTestCompile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '1.6.0'
    
}


javadoc {
	// TODO: Need to fix the errors eventually
	failOnError = false
}

// copy webapp files
task copyWeb(type: Copy) {
    from 'src/main/web'
    into project.web_build_dir
}
distTar.dependsOn copyWeb
distZip.dependsOn copyWeb


// Configure the distribution plugin instead of using the application plugin so that
// the web application classes stay outside of a jar file and Tomcat will properly
// process the annotations. For some reason Tomcat won't process the annotations
// inside of a jar file.
distributions {
    main {
        contents {
            from(javadoc) {
                into 'docs/api'
            }
            // get output of copyWebapp task
            from(project.web_build_dir) {
                into 'web'
            }
            from(sourceSets.main.output) {
                into 'classes'
            }
            from(configurations.runtime) {
            	into 'lib'
           	}
        }
    }
}

task run(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	
	main = project.mainClassName
}

