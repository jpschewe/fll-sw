{
  "type": "File",
  "start": 0,
  "end": 3762,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 94,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 3762,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 94,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 229,
        "end": 260,
        "loc": {
          "start": {
            "line": 7,
            "column": 0
          },
          "end": {
            "line": 7,
            "column": 31
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 238,
            "end": 242,
            "loc": {
              "start": {
                "line": 7,
                "column": 9
              },
              "end": {
                "line": 7,
                "column": 13
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 238,
              "end": 242,
              "loc": {
                "start": {
                  "line": 7,
                  "column": 9
                },
                "end": {
                  "line": 7,
                  "column": 13
                },
                "identifierName": "Enum"
              },
              "name": "Enum",
              "leadingComments": null
            },
            "local": {
              "type": "Identifier",
              "start": 238,
              "end": 242,
              "loc": {
                "start": {
                  "line": 7,
                  "column": 9
                },
                "end": {
                  "line": 7,
                  "column": 13
                },
                "identifierName": "Enum"
              },
              "name": "Enum"
            },
            "leadingComments": null
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 250,
          "end": 259,
          "loc": {
            "start": {
              "line": 7,
              "column": 21
            },
            "end": {
              "line": 7,
              "column": 30
            }
          },
          "extra": {
            "rawValue": "../Enum",
            "raw": "'../Enum'"
          },
          "value": "../Enum"
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n ",
            "start": 0,
            "end": 227,
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 5,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Enumeration of different ways to resolve dates and times.\n * \n * Parsing a text string occurs in two phases.\n * Phase 1 is a basic text parse according to the fields added to the builder.\n * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n * This style is used to control how phase 2, resolving, happens.\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * ResolverStyle.STRICT = new ResolverStyle('STRICT');\n *\n * Style to resolve dates and times strictly.\n *\n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n *\n * ResolverStyle.SMART = new ResolverStyle('SMART');\n *\n * Style to resolve dates and times in a smart, or intelligent, manner.\n *\n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n *\n * ResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n *\n * Style to resolve dates and times leniently.\n *\n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n *\n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n *\n ",
            "start": 262,
            "end": 2193,
            "loc": {
              "start": {
                "line": 9,
                "column": 0
              },
              "end": {
                "line": 55,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2194,
        "end": 2236,
        "loc": {
          "start": {
            "line": 56,
            "column": 0
          },
          "end": {
            "line": 56,
            "column": 42
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "ClassDeclaration",
          "start": 2201,
          "end": 2236,
          "loc": {
            "start": {
              "line": 56,
              "column": 7
            },
            "end": {
              "line": 56,
              "column": 42
            }
          },
          "id": {
            "type": "Identifier",
            "start": 2207,
            "end": 2220,
            "loc": {
              "start": {
                "line": 56,
                "column": 13
              },
              "end": {
                "line": 56,
                "column": 26
              },
              "identifierName": "ResolverStyle"
            },
            "name": "ResolverStyle",
            "leadingComments": null
          },
          "superClass": {
            "type": "Identifier",
            "start": 2229,
            "end": 2233,
            "loc": {
              "start": {
                "line": 56,
                "column": 35
              },
              "end": {
                "line": 56,
                "column": 39
              },
              "identifierName": "Enum"
            },
            "name": "Enum"
          },
          "body": {
            "type": "ClassBody",
            "start": 2234,
            "end": 2236,
            "loc": {
              "start": {
                "line": 56,
                "column": 40
              },
              "end": {
                "line": 56,
                "column": 42
              }
            },
            "body": [],
            "leadingComments": null,
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Enumeration of different ways to resolve dates and times.\n * \n * Parsing a text string occurs in two phases.\n * Phase 1 is a basic text parse according to the fields added to the builder.\n * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n * This style is used to control how phase 2, resolving, happens.\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * ResolverStyle.STRICT = new ResolverStyle('STRICT');\n *\n * Style to resolve dates and times strictly.\n *\n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n *\n * ResolverStyle.SMART = new ResolverStyle('SMART');\n *\n * Style to resolve dates and times in a smart, or intelligent, manner.\n *\n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n *\n * ResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n *\n * Style to resolve dates and times leniently.\n *\n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n *\n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n *\n ",
              "start": 262,
              "end": 2193,
              "loc": {
                "start": {
                  "line": 9,
                  "column": 0
                },
                "end": {
                  "line": 55,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * Style to resolve dates and times strictly.\n * \n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n ",
              "start": 2238,
              "end": 2678,
              "loc": {
                "start": {
                  "line": 58,
                  "column": 0
                },
                "end": {
                  "line": 68,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Enumeration of different ways to resolve dates and times.\n * \n * Parsing a text string occurs in two phases.\n * Phase 1 is a basic text parse according to the fields added to the builder.\n * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n * This style is used to control how phase 2, resolving, happens.\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * ResolverStyle.STRICT = new ResolverStyle('STRICT');\n *\n * Style to resolve dates and times strictly.\n *\n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n *\n * ResolverStyle.SMART = new ResolverStyle('SMART');\n *\n * Style to resolve dates and times in a smart, or intelligent, manner.\n *\n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n *\n * ResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n *\n * Style to resolve dates and times leniently.\n *\n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n *\n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n *\n ",
            "start": 262,
            "end": 2193,
            "loc": {
              "start": {
                "line": 9,
                "column": 0
              },
              "end": {
                "line": 55,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Style to resolve dates and times strictly.\n * \n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n ",
            "start": 2238,
            "end": 2678,
            "loc": {
              "start": {
                "line": 58,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 2679,
        "end": 2730,
        "loc": {
          "start": {
            "line": 69,
            "column": 0
          },
          "end": {
            "line": 69,
            "column": 51
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 2679,
          "end": 2729,
          "loc": {
            "start": {
              "line": 69,
              "column": 0
            },
            "end": {
              "line": 69,
              "column": 50
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 2679,
            "end": 2699,
            "loc": {
              "start": {
                "line": 69,
                "column": 0
              },
              "end": {
                "line": 69,
                "column": 20
              }
            },
            "object": {
              "type": "Identifier",
              "start": 2679,
              "end": 2692,
              "loc": {
                "start": {
                  "line": 69,
                  "column": 0
                },
                "end": {
                  "line": 69,
                  "column": 13
                },
                "identifierName": "ResolverStyle"
              },
              "name": "ResolverStyle",
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 2693,
              "end": 2699,
              "loc": {
                "start": {
                  "line": 69,
                  "column": 14
                },
                "end": {
                  "line": 69,
                  "column": 20
                },
                "identifierName": "STRICT"
              },
              "name": "STRICT"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "NewExpression",
            "start": 2702,
            "end": 2729,
            "loc": {
              "start": {
                "line": 69,
                "column": 23
              },
              "end": {
                "line": 69,
                "column": 50
              }
            },
            "callee": {
              "type": "Identifier",
              "start": 2706,
              "end": 2719,
              "loc": {
                "start": {
                  "line": 69,
                  "column": 27
                },
                "end": {
                  "line": 69,
                  "column": 40
                },
                "identifierName": "ResolverStyle"
              },
              "name": "ResolverStyle"
            },
            "arguments": [
              {
                "type": "StringLiteral",
                "start": 2720,
                "end": 2728,
                "loc": {
                  "start": {
                    "line": 69,
                    "column": 41
                  },
                  "end": {
                    "line": 69,
                    "column": 49
                  }
                },
                "extra": {
                  "rawValue": "STRICT",
                  "raw": "'STRICT'"
                },
                "value": "STRICT"
              }
            ]
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Style to resolve dates and times strictly.\n * \n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n ",
            "start": 2238,
            "end": 2678,
            "loc": {
              "start": {
                "line": 58,
                "column": 0
              },
              "end": {
                "line": 68,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Style to resolve dates and times in a smart, or intelligent, manner.\n * \n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n ",
            "start": 2731,
            "end": 3275,
            "loc": {
              "start": {
                "line": 70,
                "column": 0
              },
              "end": {
                "line": 81,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 3276,
        "end": 3325,
        "loc": {
          "start": {
            "line": 82,
            "column": 0
          },
          "end": {
            "line": 82,
            "column": 49
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 3276,
          "end": 3324,
          "loc": {
            "start": {
              "line": 82,
              "column": 0
            },
            "end": {
              "line": 82,
              "column": 48
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 3276,
            "end": 3295,
            "loc": {
              "start": {
                "line": 82,
                "column": 0
              },
              "end": {
                "line": 82,
                "column": 19
              }
            },
            "object": {
              "type": "Identifier",
              "start": 3276,
              "end": 3289,
              "loc": {
                "start": {
                  "line": 82,
                  "column": 0
                },
                "end": {
                  "line": 82,
                  "column": 13
                },
                "identifierName": "ResolverStyle"
              },
              "name": "ResolverStyle",
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 3290,
              "end": 3295,
              "loc": {
                "start": {
                  "line": 82,
                  "column": 14
                },
                "end": {
                  "line": 82,
                  "column": 19
                },
                "identifierName": "SMART"
              },
              "name": "SMART"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "NewExpression",
            "start": 3298,
            "end": 3324,
            "loc": {
              "start": {
                "line": 82,
                "column": 22
              },
              "end": {
                "line": 82,
                "column": 48
              }
            },
            "callee": {
              "type": "Identifier",
              "start": 3302,
              "end": 3315,
              "loc": {
                "start": {
                  "line": 82,
                  "column": 26
                },
                "end": {
                  "line": 82,
                  "column": 39
                },
                "identifierName": "ResolverStyle"
              },
              "name": "ResolverStyle"
            },
            "arguments": [
              {
                "type": "StringLiteral",
                "start": 3316,
                "end": 3323,
                "loc": {
                  "start": {
                    "line": 82,
                    "column": 40
                  },
                  "end": {
                    "line": 82,
                    "column": 47
                  }
                },
                "extra": {
                  "rawValue": "SMART",
                  "raw": "'SMART'"
                },
                "value": "SMART"
              }
            ]
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Style to resolve dates and times in a smart, or intelligent, manner.\n * \n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n ",
            "start": 2731,
            "end": 3275,
            "loc": {
              "start": {
                "line": 70,
                "column": 0
              },
              "end": {
                "line": 81,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Style to resolve dates and times leniently.\n * \n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n * \n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n ",
            "start": 3326,
            "end": 3707,
            "loc": {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExpressionStatement",
        "start": 3708,
        "end": 3761,
        "loc": {
          "start": {
            "line": 93,
            "column": 0
          },
          "end": {
            "line": 93,
            "column": 53
          }
        },
        "expression": {
          "type": "AssignmentExpression",
          "start": 3708,
          "end": 3760,
          "loc": {
            "start": {
              "line": 93,
              "column": 0
            },
            "end": {
              "line": 93,
              "column": 52
            }
          },
          "operator": "=",
          "left": {
            "type": "MemberExpression",
            "start": 3708,
            "end": 3729,
            "loc": {
              "start": {
                "line": 93,
                "column": 0
              },
              "end": {
                "line": 93,
                "column": 21
              }
            },
            "object": {
              "type": "Identifier",
              "start": 3708,
              "end": 3721,
              "loc": {
                "start": {
                  "line": 93,
                  "column": 0
                },
                "end": {
                  "line": 93,
                  "column": 13
                },
                "identifierName": "ResolverStyle"
              },
              "name": "ResolverStyle",
              "leadingComments": null
            },
            "property": {
              "type": "Identifier",
              "start": 3722,
              "end": 3729,
              "loc": {
                "start": {
                  "line": 93,
                  "column": 14
                },
                "end": {
                  "line": 93,
                  "column": 21
                },
                "identifierName": "LENIENT"
              },
              "name": "LENIENT"
            },
            "computed": false,
            "leadingComments": null
          },
          "right": {
            "type": "NewExpression",
            "start": 3732,
            "end": 3760,
            "loc": {
              "start": {
                "line": 93,
                "column": 24
              },
              "end": {
                "line": 93,
                "column": 52
              }
            },
            "callee": {
              "type": "Identifier",
              "start": 3736,
              "end": 3749,
              "loc": {
                "start": {
                  "line": 93,
                  "column": 28
                },
                "end": {
                  "line": 93,
                  "column": 41
                },
                "identifierName": "ResolverStyle"
              },
              "name": "ResolverStyle"
            },
            "arguments": [
              {
                "type": "StringLiteral",
                "start": 3750,
                "end": 3759,
                "loc": {
                  "start": {
                    "line": 93,
                    "column": 42
                  },
                  "end": {
                    "line": 93,
                    "column": 51
                  }
                },
                "extra": {
                  "rawValue": "LENIENT",
                  "raw": "'LENIENT'"
                },
                "value": "LENIENT"
              }
            ]
          },
          "leadingComments": null
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * Style to resolve dates and times leniently.\n * \n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n * \n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n ",
            "start": 3326,
            "end": 3707,
            "loc": {
              "start": {
                "line": 83,
                "column": 0
              },
              "end": {
                "line": 92,
                "column": 3
              }
            }
          }
        ]
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n ",
      "start": 0,
      "end": 227,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Enumeration of different ways to resolve dates and times.\n * \n * Parsing a text string occurs in two phases.\n * Phase 1 is a basic text parse according to the fields added to the builder.\n * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n * This style is used to control how phase 2, resolving, happens.\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * ResolverStyle.STRICT = new ResolverStyle('STRICT');\n *\n * Style to resolve dates and times strictly.\n *\n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n *\n * ResolverStyle.SMART = new ResolverStyle('SMART');\n *\n * Style to resolve dates and times in a smart, or intelligent, manner.\n *\n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n *\n * ResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n *\n * Style to resolve dates and times leniently.\n *\n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n *\n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n *\n ",
      "start": 262,
      "end": 2193,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Style to resolve dates and times strictly.\n * \n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n ",
      "start": 2238,
      "end": 2678,
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Style to resolve dates and times in a smart, or intelligent, manner.\n * \n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n ",
      "start": 2731,
      "end": 3275,
      "loc": {
        "start": {
          "line": 70,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Style to resolve dates and times leniently.\n * \n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n * \n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n ",
      "start": 3326,
      "end": 3707,
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 92,
          "column": 3
        }
      }
    }
  ],
  "tokens": [
    {
      "type": "CommentBlock",
      "value": "\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n ",
      "start": 0,
      "end": 227,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 5,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 229,
      "end": 235,
      "loc": {
        "start": {
          "line": 7,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 236,
      "end": 237,
      "loc": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 7,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Enum",
      "start": 238,
      "end": 242,
      "loc": {
        "start": {
          "line": 7,
          "column": 9
        },
        "end": {
          "line": 7,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 243,
      "end": 244,
      "loc": {
        "start": {
          "line": 7,
          "column": 14
        },
        "end": {
          "line": 7,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 245,
      "end": 249,
      "loc": {
        "start": {
          "line": 7,
          "column": 16
        },
        "end": {
          "line": 7,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "../Enum",
      "start": 250,
      "end": 259,
      "loc": {
        "start": {
          "line": 7,
          "column": 21
        },
        "end": {
          "line": 7,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 259,
      "end": 260,
      "loc": {
        "start": {
          "line": 7,
          "column": 30
        },
        "end": {
          "line": 7,
          "column": 31
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Enumeration of different ways to resolve dates and times.\n * \n * Parsing a text string occurs in two phases.\n * Phase 1 is a basic text parse according to the fields added to the builder.\n * Phase 2 resolves the parsed field-value pairs into date and/or time objects.\n * This style is used to control how phase 2, resolving, happens.\n *\n * ### Static properties of Class {@link DateTimeFormatter}\n *\n * ResolverStyle.STRICT = new ResolverStyle('STRICT');\n *\n * Style to resolve dates and times strictly.\n *\n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n *\n * ResolverStyle.SMART = new ResolverStyle('SMART');\n *\n * Style to resolve dates and times in a smart, or intelligent, manner.\n *\n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n *\n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n *\n * ResolverStyle.LENIENT = new ResolverStyle('LENIENT');\n *\n * Style to resolve dates and times leniently.\n *\n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n *\n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n *\n ",
      "start": 262,
      "end": 2193,
      "loc": {
        "start": {
          "line": 9,
          "column": 0
        },
        "end": {
          "line": 55,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2194,
      "end": 2200,
      "loc": {
        "start": {
          "line": 56,
          "column": 0
        },
        "end": {
          "line": 56,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "class",
        "keyword": "class",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "class",
      "start": 2201,
      "end": 2206,
      "loc": {
        "start": {
          "line": 56,
          "column": 7
        },
        "end": {
          "line": 56,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 2207,
      "end": 2220,
      "loc": {
        "start": {
          "line": 56,
          "column": 13
        },
        "end": {
          "line": 56,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "extends",
        "keyword": "extends",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "extends",
      "start": 2221,
      "end": 2228,
      "loc": {
        "start": {
          "line": 56,
          "column": 27
        },
        "end": {
          "line": 56,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "Enum",
      "start": 2229,
      "end": 2233,
      "loc": {
        "start": {
          "line": 56,
          "column": 35
        },
        "end": {
          "line": 56,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2234,
      "end": 2235,
      "loc": {
        "start": {
          "line": 56,
          "column": 40
        },
        "end": {
          "line": 56,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2235,
      "end": 2236,
      "loc": {
        "start": {
          "line": 56,
          "column": 41
        },
        "end": {
          "line": 56,
          "column": 42
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Style to resolve dates and times strictly.\n * \n * Using strict resolution will ensure that all parsed values are within\n * the outer range of valid values for the field. Individual fields may\n * be further processed for strictness.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using strict mode will ensure that the day-of-month is valid\n * for the year-month, rejecting invalid values.\n ",
      "start": 2238,
      "end": 2678,
      "loc": {
        "start": {
          "line": 58,
          "column": 0
        },
        "end": {
          "line": 68,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 2679,
      "end": 2692,
      "loc": {
        "start": {
          "line": 69,
          "column": 0
        },
        "end": {
          "line": 69,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2692,
      "end": 2693,
      "loc": {
        "start": {
          "line": 69,
          "column": 13
        },
        "end": {
          "line": 69,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STRICT",
      "start": 2693,
      "end": 2699,
      "loc": {
        "start": {
          "line": 69,
          "column": 14
        },
        "end": {
          "line": 69,
          "column": 20
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2700,
      "end": 2701,
      "loc": {
        "start": {
          "line": 69,
          "column": 21
        },
        "end": {
          "line": 69,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 2702,
      "end": 2705,
      "loc": {
        "start": {
          "line": 69,
          "column": 23
        },
        "end": {
          "line": 69,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 2706,
      "end": 2719,
      "loc": {
        "start": {
          "line": 69,
          "column": 27
        },
        "end": {
          "line": 69,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2719,
      "end": 2720,
      "loc": {
        "start": {
          "line": 69,
          "column": 40
        },
        "end": {
          "line": 69,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "STRICT",
      "start": 2720,
      "end": 2728,
      "loc": {
        "start": {
          "line": 69,
          "column": 41
        },
        "end": {
          "line": 69,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2728,
      "end": 2729,
      "loc": {
        "start": {
          "line": 69,
          "column": 49
        },
        "end": {
          "line": 69,
          "column": 50
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2729,
      "end": 2730,
      "loc": {
        "start": {
          "line": 69,
          "column": 50
        },
        "end": {
          "line": 69,
          "column": 51
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Style to resolve dates and times in a smart, or intelligent, manner.\n * \n * Using smart resolution will perform the sensible default for each\n * field, which may be the same as strict, the same as lenient, or a third\n * behavior. Individual fields will interpret this differently.\n * \n * For example, resolving year-month and day-of-month in the ISO calendar\n * system using smart mode will ensure that the day-of-month is from\n * 1 to 31, converting any value beyond the last valid day-of-month to be\n * the last valid day-of-month.\n ",
      "start": 2731,
      "end": 3275,
      "loc": {
        "start": {
          "line": 70,
          "column": 0
        },
        "end": {
          "line": 81,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 3276,
      "end": 3289,
      "loc": {
        "start": {
          "line": 82,
          "column": 0
        },
        "end": {
          "line": 82,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3289,
      "end": 3290,
      "loc": {
        "start": {
          "line": 82,
          "column": 13
        },
        "end": {
          "line": 82,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SMART",
      "start": 3290,
      "end": 3295,
      "loc": {
        "start": {
          "line": 82,
          "column": 14
        },
        "end": {
          "line": 82,
          "column": 19
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3296,
      "end": 3297,
      "loc": {
        "start": {
          "line": 82,
          "column": 20
        },
        "end": {
          "line": 82,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 3298,
      "end": 3301,
      "loc": {
        "start": {
          "line": 82,
          "column": 22
        },
        "end": {
          "line": 82,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 3302,
      "end": 3315,
      "loc": {
        "start": {
          "line": 82,
          "column": 26
        },
        "end": {
          "line": 82,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3315,
      "end": 3316,
      "loc": {
        "start": {
          "line": 82,
          "column": 39
        },
        "end": {
          "line": 82,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "SMART",
      "start": 3316,
      "end": 3323,
      "loc": {
        "start": {
          "line": 82,
          "column": 40
        },
        "end": {
          "line": 82,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3323,
      "end": 3324,
      "loc": {
        "start": {
          "line": 82,
          "column": 47
        },
        "end": {
          "line": 82,
          "column": 48
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3324,
      "end": 3325,
      "loc": {
        "start": {
          "line": 82,
          "column": 48
        },
        "end": {
          "line": 82,
          "column": 49
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * Style to resolve dates and times leniently.\n * \n * Using lenient resolution will resolve the values in an appropriate\n * lenient manner. Individual fields will interpret this differently.\n * \n * For example, lenient mode allows the month in the ISO calendar system\n * to be outside the range 1 to 12.\n * For example, month 15 is treated as being 3 months after month 12.\n ",
      "start": 3326,
      "end": 3707,
      "loc": {
        "start": {
          "line": 83,
          "column": 0
        },
        "end": {
          "line": 92,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 3708,
      "end": 3721,
      "loc": {
        "start": {
          "line": 93,
          "column": 0
        },
        "end": {
          "line": 93,
          "column": 13
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3721,
      "end": 3722,
      "loc": {
        "start": {
          "line": 93,
          "column": 13
        },
        "end": {
          "line": 93,
          "column": 14
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "LENIENT",
      "start": 3722,
      "end": 3729,
      "loc": {
        "start": {
          "line": 93,
          "column": 14
        },
        "end": {
          "line": 93,
          "column": 21
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3730,
      "end": 3731,
      "loc": {
        "start": {
          "line": 93,
          "column": 22
        },
        "end": {
          "line": 93,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "new",
        "keyword": "new",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "new",
      "start": 3732,
      "end": 3735,
      "loc": {
        "start": {
          "line": 93,
          "column": 24
        },
        "end": {
          "line": 93,
          "column": 27
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ResolverStyle",
      "start": 3736,
      "end": 3749,
      "loc": {
        "start": {
          "line": 93,
          "column": 28
        },
        "end": {
          "line": 93,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3749,
      "end": 3750,
      "loc": {
        "start": {
          "line": 93,
          "column": 41
        },
        "end": {
          "line": 93,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "LENIENT",
      "start": 3750,
      "end": 3759,
      "loc": {
        "start": {
          "line": 93,
          "column": 42
        },
        "end": {
          "line": 93,
          "column": 51
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3759,
      "end": 3760,
      "loc": {
        "start": {
          "line": 93,
          "column": 51
        },
        "end": {
          "line": 93,
          "column": 52
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3760,
      "end": 3761,
      "loc": {
        "start": {
          "line": 93,
          "column": 52
        },
        "end": {
          "line": 93,
          "column": 53
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3762,
      "end": 3762,
      "loc": {
        "start": {
          "line": 94,
          "column": 0
        },
        "end": {
          "line": 94,
          "column": 0
        }
      }
    }
  ]
}