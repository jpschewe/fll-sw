{"version":3,"sources":["webpack://JSJodaLocale/webpack/universalModuleDefinition","webpack://JSJodaLocale/webpack/bootstrap","webpack://JSJodaLocale/./src/Locale.js","webpack://JSJodaLocale/./src/_init.js","webpack://JSJodaLocale/./src/format/LocaleDateTimeFormatter.js","webpack://JSJodaLocale/./src/format/LocaleStore.js","webpack://JSJodaLocale/./src/format/cldr/CldrCache.js","webpack://JSJodaLocale/./src/format/cldr/CldrDateTimeFormatterBuilder.js","webpack://JSJodaLocale/./src/format/cldr/CldrDateTimeTextProvider.js","webpack://JSJodaLocale/./src/format/cldr/CldrZoneTextPrinterParser.js","webpack://JSJodaLocale/./src/format/parser/LocalizedOffsetPrinterParser.js","webpack://JSJodaLocale/./src/format/parser/TextPrinterParser.js","webpack://JSJodaLocale/./src/format/parser/WeekFieldsPrinterParser.js","webpack://JSJodaLocale/./src/js-joda-locale.js","webpack://JSJodaLocale/./src/plug.js","webpack://JSJodaLocale/./src/temporal/WeekFields.js","webpack://JSJodaLocale/external {\"amd\":\"@js-joda/core\",\"commonjs\":\"@js-joda/core\",\"commonjs2\":\"@js-joda/core\",\"root\":\"JSJoda\"}","webpack://JSJodaLocale/external {\"amd\":\"cldr-data\",\"commonjs\":\"cldr-data\",\"commonjs2\":\"cldr-data\",\"root\":\"cldrData\"}","webpack://JSJodaLocale/external {\"amd\":\"cldrjs\",\"commonjs\":\"cldrjs\",\"commonjs2\":\"cldrjs\",\"root\":\"Cldr\"}"],"names":["Locale","CldrDateTimeTextProvider","getAvailableLocales","language","country","localeString","_language","_country","_localeString","length","other","_init","ENGLISH","US","UK","CANADA","FRENCH","FRANCE","GERMAN","GERMANY","isInit","init","localeInit","weekFieldsInit","requireNonNull","jodaInternal","assert","LocaleDateTimeFormatter","locale","equals","_locale","DateTimeFormatter","_printerParser","_decimalStyle","_resolverStyle","_resolverFields","_chrono","_zone","createEntry","text","field","key","value","toString","_comparator","obj1","obj2","LocaleStore","valueTextMap","_valueTextMap","map","allList","Object","keys","forEach","style","reverse","undefined","Number","parseInt","list","values","sort","concat","_parsable","Symbol","iterator","cldrDataLoaded","Set","loadCldrData","path","has","Cldr","load","cldrData","add","localeToCldrInstanceCache","getOrCreateCldrInstance","localeToMapZonesCache","getOrCreateMapZones","cldr","mapZones","get","metaZone","mapZone","_other","_territory","_type","requireInstance","CldrDateTimeFormatterBuilder","styleOrMap","appendTextField","TextStyle","appendTextFieldStyle","appendTextFieldMap","FULL","textStyle","TemporalField","_appendInternal","TextPrinterParser","textLookup","ChronoField","copy","assign","store","provider","getText","getTextIterator","count","WeekFieldsPrinterParser","CldrZoneTextPrinterParser","SHORT","IllegalArgumentException","LocalizedOffsetPrinterParser","DateTimeFormatterBuilder","_cache","JS_JODA_LOCALE_AVAILABLE_LOCALES","availableLocales","_findStore","_createStore","MONTH_OF_YEAR","monthsData","main","styleMap","data","wide","narrow","NARROW","abbreviated","_createLocaleStore","DAY_OF_WEEK","daysData","mon","tue","wed","thu","fri","sat","sun","AMPM_OF_DAY","dayPeriodsData","am","pm","ERA","erasData","eraNames","eraNarrow","eraAbbr","IsoFields","QUARTER_OF_YEAR","quartersData","FULL_STANDALONE","SHORT_STANDALONE","includes","NARROW_STANDALONE","LENGTH_COMPARATOR","str1","str2","cmp","localeCompare","resolveZoneIdTextCache","_textStyle","zoneId","type","zoneIdToStyle","styleToType","typeToResolvedZoneIdText","_resolveZoneIdText","zoneData","metazoneInfo","metazone","metaZoneData","preferredZone","attributes","territory","_cachedResolveZoneIdText","goldenZone","context","buf","zone","getValueQuery","TemporalQueries","normalized","ZoneOffset","append","id","daylight","hasDaylightSupport","tzType","tzstyle","asNormal","position","ids","ZoneRulesProvider","getAvailableZoneIds","genericText","standardText","daylightText","sortedKeys","name","subSequenceEquals","setParsedZone","ZoneId","of","MathUtil","offsetSecs","getValue","OFFSET_SECONDS","OffsetIdPrinterParser","print","totalSecs","safeToInt","absHours","Math","abs","intMod","intDiv","absMinutes","absSeconds","parse","end","setParsedField","sign","charAt","negative","ch","hour","offset","min","sec","_field","_provider","_numberPrinterParser","parseText","isStrict","it","entry","itText","_currentNumberPrinterParser","NumberPrinterParser","SignStyle","NORMAL","StringBuilder","letter","_letter","_count","weekFields","WeekFields","pp","_evaluate","dayOfWeek","NOT_NEGATIVE","weekOfWeekBasedYear","weekOfMonth","ReducedPrinterParser","weekBasedYear","BASE_DATE","EXCEEDS_PAD","sb","use","plug","jsJoda","getOwnPropertyNames","prototype","prop","DAY_OF_WEEK_RANGE","ValueRange","WEEK_OF_MONTH_RANGE","WEEK_OF_YEAR_RANGE","WEEK_OF_WEEK_BASED_YEAR_RANGE","WEEK_BASED_YEAR_RANGE","YEAR","range","_weekDayMap","DayOfWeek","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","ComputedDayOfField","weekDef","ChronoUnit","DAYS","WEEKS","MONTHS","YEARS","WEEK_BASED_YEARS","FOREVER","baseUnit","rangeUnit","_name","_weekDef","_baseUnit","_rangeUnit","_range","temporal","sow","firstDayOfWeek","dow","_localizedDayOfWeek","_localizedWeekOfMonth","_localizedWeekOfYear","_localizedWOWBY","_localizedWBY","IllegalStateException","isoDow","floorMod","dom","DAY_OF_MONTH","_startOfWeekOffset","_computeWeek","doy","DAY_OF_YEAR","woy","previous","LocalDate","from","minus","year","yearLen","Year","isLeap","weekIndexOfFirstWeekNextYear","minimalDaysInFirstWeek","day","weekStart","newValue","newVal","checkValidIntValue","currentVal","baseWowby","diffWeeks","roundDown","result","plus","newWowby","delta","fieldValues","partialTemporal","resolverStyle","remove","localDow","put","containsKey","wby","date","days","ResolverStyle","LENIENT","wowby","dateDow","weeks","STRICT","getLong","DateTimeException","month","wom","isSupported","EPOCH_DAY","_rangeWOWBY","fieldRange","minimum","maximum","IsoChronology","INSTANCE","WeekFieldsCache","Map","firstDayOrLocale","minDays","ofLocale","ofFirstDayOfWeekMinDays","worldRegion","weekData","firstDay","rules","set","_firstDayOfWeek","_minimalDays","_dayOfWeek","ofDayOfWeekField","_weekOfMonth","ofWeekOfMonthField","_weekOfYear","ofWeekOfYearField","_weekOfWeekBasedYear","ofWeekOfWeekBasedYearField","_weekBasedYear","ofWeekBasedYearField","hashCode","ordinal","ISO","SUNDAY_START"],"mappings":"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","file":"js-joda-locale.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@js-joda/core\"), require(\"cldr-data\"), require(\"cldrjs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@js-joda/core\", \"cldr-data\", \"cldrjs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSJodaLocale\"] = factory(require(\"@js-joda/core\"), require(\"cldr-data\"), require(\"cldrjs\"));\n\telse\n\t\troot[\"JSJodaLocale\"] = factory(root[\"JSJoda\"], root[\"cldrData\"], root[\"Cldr\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__js_joda_core__, __WEBPACK_EXTERNAL_MODULE_cldr_data__, __WEBPACK_EXTERNAL_MODULE_cldrjs__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js-joda-locale.js\");\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport CldrDateTimeTextProvider from './format/cldr/CldrDateTimeTextProvider';\n\nexport default class Locale {\n    static getAvailableLocales() {\n        return new CldrDateTimeTextProvider().getAvailableLocales();\n    }\n\n    // TODO: maybe use new Cldr(<'en'>) constructor instead?\n    // see https://github.com/rxaviers/cldrjs#instantiate-a-locale-and-get-it-normalized\n    constructor(language, country = '', localeString = '') {\n        this._language = language;\n        this._country = country;\n        this._localeString = localeString;\n    }\n\n    language() {\n        return this._language;\n    }\n\n    country() {\n        return this._country;\n    }\n\n    localeString() {\n        if (this._localeString.length > 0) {\n            return this._localeString;\n        }\n        if (this._country.length > 0) {\n            return `${this._language}-${this._country}`;\n        } else {\n            return this._language;\n        }\n    }\n\n    toString() {\n        return `Locale[${this.localeString()}]`;\n    }\n\n    equals(other) {\n        if (!other) {\n            return false;\n        }\n        if (!(other instanceof Locale)) {\n            return false;\n        }\n        return this.localeString() === other.localeString();\n    }\n}\n\nexport function _init() {\n    //some samples/consts\n    Locale.ENGLISH = new Locale('en');\n    Locale.US = new Locale('en', 'US', 'en'); // default in cldr-data, no en-US\n    Locale.UK = new Locale('en', 'GB');\n    Locale.CANADA = new Locale('en', 'CA');\n    Locale.FRENCH = new Locale('fr');\n    Locale.FRANCE = new Locale('fr', 'FR', 'fr'); // default in cldr-data, no fr-FR\n    Locale.GERMAN = new Locale('de');\n    Locale.GERMANY = new Locale('de', 'DE', 'de'); // default in cldr-data, no de-DE\n}\n","/*\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { _init as localeInit } from './Locale';\nimport { _init as weekFieldsInit } from './temporal/WeekFields';\n\nlet isInit = false;\n\nfunction init() {\n    /* istanbul ignore if */\n    if (isInit) {\n        return;\n    }\n\n    isInit = true;\n\n    localeInit();\n    weekFieldsInit();\n}\n\ninit();\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport { _ as jodaInternal, DateTimeFormatter } from '@js-joda/core';\n// eslint-disable-next-line no-unused-vars\nimport Locale from '../Locale';\n\nconst { assert: { requireNonNull } } = jodaInternal;\n\nexport default class LocaleDateTimeFormatter extends DateTimeFormatter {\n\n    /**\n     * Returns a copy of this formatter with a new locale.\n     * <p>\n     * This is used to lookup any part of the formatter needing specific\n     * localization, such as the text or localized pattern.\n     * <p>\n     * This instance is immutable and unaffected by this method call.\n     *\n     * @param {!Locale} locale  the new locale, not null\n     * @return a formatter based on this formatter with the requested locale, not null\n     */\n    withLocale(locale) {\n        requireNonNull(locale, 'locale');\n        if (locale.equals(this._locale)) {\n            return this;\n        }\n        return new DateTimeFormatter(this._printerParser, locale, this._decimalStyle, this._resolverStyle, this._resolverFields, this._chrono, this._zone);\n    }\n\n\n}\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\n\n/**\n * Helper method to create an immutable entry.\n *\n * @param text  the text, not null\n * @param field  the field, not null\n * @return the entry, not null\n */\nexport const createEntry = (text, field) => {\n    return {\n        key: text,\n        value: field,\n        toString: function () {\n            return text + '->' + field;\n        }\n    };\n};\n\nconst _comparator = (obj1, obj2) => {\n    return obj2.key.length - obj1.key.length;  // longest to shortest\n};\n\n/**\n * Stores the text for a single locale.\n * <p>\n * Some fields have a textual representation, such as day-of-week or month-of-year.\n * These textual representations can be captured in this class for printing\n * and parsing.\n */\nexport class LocaleStore {\n    //-----------------------------------------------------------------------\n    /**\n     * Constructor.\n     *\n     * @param {Object} valueTextMap  the map of values to text to store, assigned and not altered, not null\n     */\n    constructor(valueTextMap) {\n        this._valueTextMap = valueTextMap;\n        const map = {};\n        let allList = [];\n        Object.keys(valueTextMap).forEach((style) => {\n            const reverse = {};\n            Object.keys(valueTextMap[style]).forEach((key) => {\n                const value = valueTextMap[style][key];\n                if (reverse[value] === undefined) {\n                    reverse[value] = createEntry(value, Number.parseInt(key));\n                }\n            });\n            const list = Object.values(reverse);\n            list.sort(_comparator);\n            map[style] = list;\n            allList = allList.concat(list);\n            map[null] = allList;\n        });\n        allList.sort(_comparator);\n        this._parsable = map;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the text for the specified field value, locale and style\n     * for the purpose of printing.\n     *\n     * @param {Number} value  the value to get text for, not null\n     * @param {TextStyle} style  the style to get text for, not null\n     * @return the text for the field value, null if no text found\n     */\n    getText(value, style) {\n        const map = this._valueTextMap[style];\n        return map != null ? map[value] : null;\n    }\n\n    /**\n     * Gets an iterator of text to field for the specified style for the purpose of parsing.\n     * <p>\n     * The iterator must be returned in order from the longest text to the shortest.\n     *\n     * @param style  the style to get text for, null for all parsable text\n     * @return the iterator of text to field pairs, in order from longest text to shortest text,\n     *  null if the style is not parsable\n     */\n    getTextIterator(style) {\n        const list = this._parsable[style];\n        return list != null ? list[Symbol.iterator]() : null;\n    }\n}\n","/*\n* @copyright (c) 2020, Philipp Thuerwaechter & Pattrick Hueper\n* @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n*/\n\nimport cldrData from 'cldr-data';\nimport Cldr from 'cldrjs';\n\nconst cldrDataLoaded = new Set();\n/**\n* Loads the Cldr data for the given path if it hasn't been loaded before.\n*/\nexport const loadCldrData = (path) => {\n    if (!cldrDataLoaded.has(path)) {\n        Cldr.load(cldrData(path));\n        cldrDataLoaded.add(path);\n    }\n};\n\nconst localeToCldrInstanceCache = {};\n/**\n* Returns a Cldr instance for the given locale.\n* Memoized, so a given locale will always return the exact same cldr instance.\n*/\nexport const getOrCreateCldrInstance = (locale) => {\n    if (localeToCldrInstanceCache[locale] == null) {\n        localeToCldrInstanceCache[locale] = new Cldr(locale);\n    }\n\n    return localeToCldrInstanceCache[locale];\n};\n\nconst localeToMapZonesCache = {};\n/**\n* Returns a map zones object for a Cldr instance.\n* Memoized, so for any given Cldr instance locale, the same object will be returned.\n*/\nexport const getOrCreateMapZones = (cldr) => {\n    if (localeToMapZonesCache[cldr.locale] == null) {\n        const mapZones = {};\n\n        cldr.get('supplemental/metaZones/metazones').forEach((metaZone) => {\n            if (metaZone.mapZone) {\n                if (!mapZones[metaZone.mapZone._other]) {\n                    mapZones[metaZone.mapZone._other] = {};\n                }\n                mapZones[metaZone.mapZone._other][metaZone.mapZone._territory] = metaZone.mapZone._type;\n            }\n        });\n\n        localeToMapZonesCache[cldr.locale] = mapZones;\n    }\n\n    return localeToMapZonesCache[cldr.locale];\n};\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport {\n    _ as jodaInternal,\n    DateTimeFormatterBuilder,\n    IllegalArgumentException,\n    TextStyle,\n    ChronoField,\n    TemporalField\n} from '@js-joda/core';\n\nimport TextPrinterParser from '../parser/TextPrinterParser';\nimport CldrDateTimeTextProvider from './CldrDateTimeTextProvider';\nimport CldrZoneTextPrinterParser from './CldrZoneTextPrinterParser';\nimport {LocaleStore} from '../LocaleStore';\nimport LocalizedOffsetPrinterParser from '../parser/LocalizedOffsetPrinterParser';\nimport WeekFieldsPrinterParser from '../parser/WeekFieldsPrinterParser';\n\nconst { assert: { requireNonNull, requireInstance } } = jodaInternal;\n\n/** DateTimeFormatterBuilder extension functions implementing locale handling using cldr data (http://cldr.unicode.org/)\n */\nexport default class CldrDateTimeFormatterBuilder extends DateTimeFormatterBuilder {\n\n    //-------------------------------------------------------------------------\n    /**\n     * function overloading for {@link CldrDateTimeFormatterBuilder#appendText}\n     *\n     * if called with 1 arguments and first argument is an instance of ChronoField,\n     * then {@link CldrDateTimeFormatterBuilder.appendTextField} is executed.\n     * if called with 2 arguments and second argument is an instance of TextStyle,\n     * then {@link CldrDateTimeFormatterBuilder.appendTextFieldStyle} is executed.\n     *\n     * Otherwise {@link CldrDateTimeFormatterBuilder.appendTextFieldMap} is executed.\n     *\n     * @param {!ChronoField} field\n     * @param {!(TextStyle|Object)} styleOrMap\n     * @returns {DateTimeFormatterBuilder} this for chaining\n     */\n    appendText(field, styleOrMap) {\n        if (styleOrMap === undefined) {\n            return this.appendTextField(field);\n        } else if (styleOrMap instanceof TextStyle) {\n            return this.appendTextFieldStyle(field, styleOrMap);\n        } else {\n            return this.appendTextFieldMap(field, styleOrMap);\n        }\n    }\n\n    /**\n     * Appends the text of a date-time field to the formatter using the full\n     * text style.\n     * <p>\n     * The text of the field will be output during a print.\n     * The value must be within the valid range of the field.\n     * If the value cannot be obtained then an exception will be thrown.\n     * If the field has no textual representation, then the numeric value will be used.\n     * <p>\n     * The value will be printed as per the normal print of an integer value.\n     * Only negative numbers will be signed. No padding will be added.\n     *\n     * @param {!TemporalField} field  the field to append, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendTextField(field) {\n        return this.appendTextFieldStyle(field, TextStyle.FULL);\n    }\n\n    /**\n     * Appends the text of a date-time field to the formatter.\n     * <p>\n     * The text of the field will be output during a print.\n     * The value must be within the valid range of the field.\n     * If the value cannot be obtained then an exception will be thrown.\n     * If the field has no textual representation, then the numeric value will be used.\n     * <p>\n     * The value will be printed as per the normal print of an integer value.\n     * Only negative numbers will be signed. No padding will be added.\n     *\n     * @param {!TemporalField} field  the field to append, not null\n     * @param {!TextStyle} textStyle  the text style to use, not null\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendTextFieldStyle(field, textStyle) {\n        requireNonNull(field, 'field');\n        requireInstance(field, TemporalField, 'field');\n        requireNonNull(textStyle, 'textStyle');\n        requireInstance(textStyle, TextStyle, 'textStyle');\n        this._appendInternal(new TextPrinterParser(field, textStyle, new CldrDateTimeTextProvider()));\n        return this;\n    }\n\n    /**\n     * Appends the text of a date-time field to the formatter using the specified\n     * map to supply the text.\n     * <p>\n     * The standard text outputting methods use the localized text in the JDK.\n     * This method allows that text to be specified directly.\n     * The supplied map is not validated by the builder to ensure that printing or\n     * parsing is possible, thus an invalid map may throw an error during later use.\n     * <p>\n     * Supplying the map of text provides considerable flexibility in printing and parsing.\n     * For example, a legacy application might require or supply the months of the\n     * year as \"JNY\", \"FBY\", \"MCH\" etc. These do not match the standard set of text\n     * for localized month names. Using this method, a map can be created which\n     * defines the connection between each value and the text:\n     * <pre>\n     * Map&lt;Long, String&gt; map = new HashMap&lt;&gt;();\n     * map.put(1, \"JNY\");\n     * map.put(2, \"FBY\");\n     * map.put(3, \"MCH\");\n     * ...\n     * builder.appendText(MONTH_OF_YEAR, map);\n     * </pre>\n     * <p>\n     * Other uses might be to output the value with a suffix, such as \"1st\", \"2nd\", \"3rd\",\n     * or as Roman numerals \"I\", \"II\", \"III\", \"IV\".\n     * <p>\n     * During printing, the value is obtained and checked that it is in the valid range.\n     * If text is not available for the value then it is output as a number.\n     * During parsing, the parser will match against the map of text and numeric values.\n     *\n     * @param {!ChronoField} field  the field to append, not null\n     * @param {!Object} textLookup  the map from the value to the text\n     * @return {DateTimeFormatterBuilder} this, for chaining, not null\n     */\n    appendTextFieldMap(field, textLookup) {\n        requireNonNull(field, 'field');\n        requireInstance(field, ChronoField, 'field');\n        requireNonNull(textLookup, 'textLookup');\n        const copy = Object.assign({}, textLookup);\n        const map = {};\n        map[TextStyle.FULL] = copy;\n        const store = new LocaleStore(map);\n        const provider = {\n            getText: function(field, value, style) {\n                return store.getText(value, style);\n            },\n            getTextIterator: function(field, style) {\n                return store.getTextIterator(style);\n            }\n        };\n        this._appendInternal(new TextPrinterParser(field, TextStyle.FULL, provider));\n        return this;\n    }\n\n    appendWeekField(field, count) {\n        requireNonNull(field, 'field');\n        requireNonNull(count, 'count');\n        this._appendInternal(new WeekFieldsPrinterParser(field, count));\n        return this;\n    }\n\n    /**\n     * Appends the time-zone name, such as 'British Summer Time', to the formatter.\n     * <p>\n     * This appends an instruction to print the textual name of the zone to the builder.\n     * <p>\n     * During printing, the zone is obtained using a mechanism equivalent\n     * to querying the temporal with {@link TemporalQueries#zoneId()}.\n     * If the zone is a {@code ZoneOffset} it will be printed using the\n     * result of {@link ZoneOffset#getId()}.\n     * If the zone is not an offset, the textual name will be looked up\n     * for the locale set in the {@link DateTimeFormatter}.\n     * If the temporal object being printed represents an instant, then the text\n     * will be the summer or winter time text as appropriate.\n     * If the lookup for text does not find any suitable reuslt, then the\n     * {@link ZoneId#getId() ID} will be printed instead.\n     * If the zone cannot be obtained then an exception is thrown unless the\n     * section of the formatter is optional.\n     * <p>\n     * Parsing is not currently supported.\n     *\n     * @param {!TextStyle} textStyle  the text style to use, not null\n     * @return this, for chaining, not null\n     */\n    appendZoneText(textStyle) {\n        this._appendInternal(new CldrZoneTextPrinterParser(textStyle));\n        return this;\n    }\n\n    /**\n     * Appends the localized zone offset, such as 'GMT+01:00', to the formatter.\n     * <p>\n     * This appends a localized zone offset to the builder, the format of the\n     * localized offset is controlled by the specified {@link FormatStyle style}\n     * to this method:\n     * <ul>\n     * <li>{@link TextStyle#FULL full} - formats with localized offset text, such\n     * as 'GMT, 2-digit hour and minute field, optional second field if non-zero,\n     * and colon.\n     * <li>{@link TextStyle#SHORT short} - formats with localized offset text,\n     * such as 'GMT, hour without leading zero, optional 2-digit minute and\n     * second if non-zero, and colon.\n     * </ul>\n     * <p>\n     * During formatting, the offset is obtained using a mechanism equivalent\n     * to querying the temporal with {@link TemporalQueries#offset()}.\n     * If the offset cannot be obtained then an exception is thrown unless the\n     * section of the formatter is optional.\n     * <p>\n     * During parsing, the offset is parsed using the format defined above.\n     * If the offset cannot be parsed then an exception is thrown unless the\n     * section of the formatter is optional.\n     * <p>\n     * @param {TextStyle} textStyle  the format style to use, not null\n     * @return this, for chaining, not null\n     * @throws IllegalArgumentException if style is neither {@link TextStyle#FULL\n     * full} nor {@link TextStyle#SHORT short}\n     */\n    appendLocalizedOffset(textStyle) {\n        requireNonNull(textStyle, 'textStyle');\n        if (textStyle !== TextStyle.FULL && textStyle !== TextStyle.SHORT) {\n            throw new IllegalArgumentException('Style must be either full or short');\n        }\n        this._appendInternal(new LocalizedOffsetPrinterParser(textStyle));\n        return this;\n    }\n\n    //-----------------------------------------------------------------------\n\n}\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport { ChronoField, IsoFields, TextStyle } from '@js-joda/core';\n\nimport cldrData from 'cldr-data';\n\nimport {LocaleStore, createEntry} from '../LocaleStore';\nimport {getOrCreateCldrInstance, loadCldrData} from './CldrCache';\n\n/**\n * The Service Provider Implementation to obtain date-time text for a field.\n * <p>\n * This implementation is based on data from cldr.\n *\n * @private\n */\nexport default class CldrDateTimeTextProvider {\n\n    constructor() {\n        this._cache = {};\n        loadCldrData('supplemental/likelySubtags.json');\n    }\n\n    //-----------------------------------------------------------------------\n    getAvailableLocales() {\n        /* eslint-disable no-undef */\n        // JS_JODA_LOCALE_AVAILABLE_LOCALS may be defined using webpack DefinePlugin\n        if (typeof(JS_JODA_LOCALE_AVAILABLE_LOCALES) !== 'undefined') {\n            return JS_JODA_LOCALE_AVAILABLE_LOCALES;\n        }\n        /* eslint-enable no-undef */\n        return cldrData('availableLocales.json').availableLocales;\n    }\n\n    //-----------------------------------------------------------------------\n    getText(field, value, style, locale) {\n        const store = this._findStore(field, locale);\n        if (store instanceof LocaleStore) {\n            return store.getText(value, style);\n        }\n        return null;\n    }\n\n    getTextIterator(field, style, locale) {\n        const store = this._findStore(field, locale);\n        if (store instanceof LocaleStore) {\n            return store.getTextIterator(style);\n        }\n        return null;\n    }\n\n    //-----------------------------------------------------------------------\n    _findStore(field, locale) {\n        const key = createEntry(field, locale);\n        let store = this._cache[key];\n        if (store === undefined) {\n            store = this._createStore(field, locale);\n            this._cache[key] = store;\n        }\n        return store;\n    }\n\n    _createStore(field, locale) {\n        loadCldrData(`main/${locale.localeString()}/ca-gregorian.json`);\n        const cldr = getOrCreateCldrInstance(locale.localeString());\n        if (field === ChronoField.MONTH_OF_YEAR) {\n            const monthsData = cldr.main('dates/calendars/gregorian/months/format');\n            const styleMap = {};\n            let data = {};\n            data[1] = monthsData.wide[1];\n            data[2] = monthsData.wide[2];\n            data[3] = monthsData.wide[3];\n            data[4] = monthsData.wide[4];\n            data[5] = monthsData.wide[5];\n            data[6] = monthsData.wide[6];\n            data[7] = monthsData.wide[7];\n            data[8] = monthsData.wide[8];\n            data[9] = monthsData.wide[9];\n            data[10] = monthsData.wide[10];\n            data[11] = monthsData.wide[11];\n            data[12] = monthsData.wide[12];\n            styleMap[TextStyle.FULL] = data;\n\n            data = {};\n            data[1] = monthsData.narrow[1];\n            data[2] = monthsData.narrow[2];\n            data[3] = monthsData.narrow[3];\n            data[4] = monthsData.narrow[4];\n            data[5] = monthsData.narrow[5];\n            data[6] = monthsData.narrow[6];\n            data[7] = monthsData.narrow[7];\n            data[8] = monthsData.narrow[8];\n            data[9] = monthsData.narrow[9];\n            data[10] = monthsData.narrow[10];\n            data[11] = monthsData.narrow[11];\n            data[12] = monthsData.narrow[12];\n            styleMap[TextStyle.NARROW] = data;\n\n            data = {};\n            data[1] = monthsData.abbreviated[1];\n            data[2] = monthsData.abbreviated[2];\n            data[3] = monthsData.abbreviated[3];\n            data[4] = monthsData.abbreviated[4];\n            data[5] = monthsData.abbreviated[5];\n            data[6] = monthsData.abbreviated[6];\n            data[7] = monthsData.abbreviated[7];\n            data[8] = monthsData.abbreviated[8];\n            data[9] = monthsData.abbreviated[9];\n            data[10] = monthsData.abbreviated[10];\n            data[11] = monthsData.abbreviated[11];\n            data[12] = monthsData.abbreviated[12];\n            styleMap[TextStyle.SHORT] = data;\n            return this._createLocaleStore(styleMap);\n        }\n        if (field === ChronoField.DAY_OF_WEEK) {\n            const daysData = cldr.main('dates/calendars/gregorian/days/format');\n            const styleMap = {};\n            let data = {};\n            data[1] = daysData.wide.mon;\n            data[2] = daysData.wide.tue;\n            data[3] = daysData.wide.wed;\n            data[4] = daysData.wide.thu;\n            data[5] = daysData.wide.fri;\n            data[6] = daysData.wide.sat;\n            data[7] = daysData.wide.sun;\n            styleMap[TextStyle.FULL] = data;\n\n            data = {};\n            data[1] = daysData.narrow.mon;\n            data[2] = daysData.narrow.tue;\n            data[3] = daysData.narrow.wed;\n            data[4] = daysData.narrow.thu;\n            data[5] = daysData.narrow.fri;\n            data[6] = daysData.narrow.sat;\n            data[7] = daysData.narrow.sun;\n            styleMap[TextStyle.NARROW] = data;\n\n            data = {};\n            data[1] = daysData.abbreviated.mon;\n            data[2] = daysData.abbreviated.tue;\n            data[3] = daysData.abbreviated.wed;\n            data[4] = daysData.abbreviated.thu;\n            data[5] = daysData.abbreviated.fri;\n            data[6] = daysData.abbreviated.sat;\n            data[7] = daysData.abbreviated.sun;\n            styleMap[TextStyle.SHORT] = data;\n            return this._createLocaleStore(styleMap);\n        }\n        if (field === ChronoField.AMPM_OF_DAY) {\n            const dayPeriodsData = cldr.main('dates/calendars/gregorian/dayPeriods/format');\n            const styleMap = {};\n            let data = {};\n            data[0] = dayPeriodsData.wide.am;\n            data[1] = dayPeriodsData.wide.pm;\n            styleMap[TextStyle.FULL] = data;\n\n            data = {};\n            data[0] = dayPeriodsData.narrow.am;\n            data[1] = dayPeriodsData.narrow.pm;\n            styleMap[TextStyle.NARROW] = data;\n\n            data = {};\n            data[0] = dayPeriodsData.abbreviated.am;\n            data[1] = dayPeriodsData.abbreviated.pm;\n            styleMap[TextStyle.SHORT] = data;\n\n            return this._createLocaleStore(styleMap);\n        }\n        if (field === ChronoField.ERA) {\n            const erasData = cldr.main('dates/calendars/gregorian/eras');\n            const styleMap = {};\n            let data = {};\n            data[0] = erasData.eraNames['0'];\n            data[1] = erasData.eraNames['1'];\n            styleMap[TextStyle.FULL] = data;\n\n            data = {};\n            data[0] = erasData.eraNarrow['0'];\n            data[1] = erasData.eraNarrow['1'];\n            styleMap[TextStyle.NARROW] = data;\n\n            data = {};\n            data[0] = erasData.eraAbbr['0'];\n            data[1] = erasData.eraAbbr['1'];\n            styleMap[TextStyle.SHORT] = data;\n\n            return this._createLocaleStore(styleMap);\n        }\n        if (field === IsoFields.QUARTER_OF_YEAR) {\n            const quartersData = cldr.main('dates/calendars/gregorian/quarters/format');\n            const styleMap = {};\n            let data = {};\n            data[1] = quartersData.wide['1'];\n            data[2] = quartersData.wide['2'];\n            data[3] = quartersData.wide['3'];\n            data[4] = quartersData.wide['4'];\n            styleMap[TextStyle.FULL] = data;\n\n            data = {};\n            data[1] = quartersData.narrow['1'];\n            data[2] = quartersData.narrow['2'];\n            data[3] = quartersData.narrow['3'];\n            data[4] = quartersData.narrow['4'];\n            styleMap[TextStyle.NARROW] = data;\n\n            data = {};\n            data[1] = quartersData.abbreviated['1'];\n            data[2] = quartersData.abbreviated['2'];\n            data[3] = quartersData.abbreviated['3'];\n            data[4] = quartersData.abbreviated['4'];\n            styleMap[TextStyle.SHORT] = data;\n\n            return this._createLocaleStore(styleMap);\n        }\n        return null;  // null marker for map\n    }\n\n    //-----------------------------------------------------------------------\n    _createLocaleStore(valueTextMap) {\n        valueTextMap[TextStyle.FULL_STANDALONE] = valueTextMap[TextStyle.FULL];\n        valueTextMap[TextStyle.SHORT_STANDALONE] = valueTextMap[TextStyle.SHORT];\n        /* istanbul ignore if */ // this doesn't seem to happen?\n        if (Object.keys(valueTextMap).includes(TextStyle.NARROW) && !Object.keys(valueTextMap).includes(TextStyle.NARROW_STANDALONE)) {\n            valueTextMap[TextStyle.NARROW_STANDALONE] = valueTextMap[TextStyle.NARROW];\n        }\n        return new LocaleStore(valueTextMap);\n    }\n}\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport {\n    _ as jodaInternal,\n    TextStyle,\n    TemporalQueries,\n    ZoneId,\n    ZoneOffset,\n    ZoneRulesProvider,\n} from '@js-joda/core';\n\nimport {getOrCreateCldrInstance, getOrCreateMapZones, loadCldrData} from './CldrCache';\n\nconst { assert: { requireNonNull, requireInstance } } = jodaInternal;\n\n//-----------------------------------------------------------------------\nconst LENGTH_COMPARATOR = (str1, str2) => {\n    let cmp = str2.length - str1.length;\n    if (cmp === 0) {\n        cmp = str1.localeCompare(str2);\n    }\n    return cmp;\n};\n\n/**\n * Cache for `_cachedResolveZoneIdText`.\n * \n * Its basic structure is:\n * Obj { locale: zoneId }\n * Obj { zoneId: style}\n * Obj { style: type}\n * Obj { type: resolvedZoneIdText}\n */\nconst resolveZoneIdTextCache = {};\n\n/**\n * Prints or parses a zone ID.\n */\nexport default class CldrZoneTextPrinterParser {\n    /** The text style to output. */\n\n    constructor(textStyle) {\n        requireNonNull(textStyle, 'textStyle');\n        requireInstance(textStyle, TextStyle, 'textStyle');\n        this._textStyle = textStyle;\n        loadCldrData('supplemental/likelySubtags.json');\n        loadCldrData('supplemental/metaZones.json');\n    }\n\n    _cachedResolveZoneIdText(cldr, zoneId, style, type) {\n        if (resolveZoneIdTextCache[cldr.locale] == null) {\n            resolveZoneIdTextCache[cldr.locale] = {};\n        }\n\n        const zoneIdToStyle = resolveZoneIdTextCache[cldr.locale];\n        if (zoneIdToStyle[zoneId] == null) {\n            zoneIdToStyle[zoneId] = {};\n        }\n\n        const styleToType = zoneIdToStyle[zoneId];\n        if (styleToType[style] == null) {\n            styleToType[style] = {};\n        }\n\n        const typeToResolvedZoneIdText = styleToType[style];\n        if (typeToResolvedZoneIdText[type] == null) {\n            typeToResolvedZoneIdText[type] = this._resolveZoneIdText(cldr, zoneId, style, type);\n        }\n\n        return typeToResolvedZoneIdText[type];\n    }\n\n    _resolveZoneIdText(cldr, zoneId, style, type) {\n        const zoneData = cldr.main(`dates/timeZoneNames/zone/${zoneId}/${style}/${type}`);\n        if (zoneData) {\n            return zoneData;\n        } else {\n            const metazoneInfo = cldr.get(`supplemental/metaZones/metazoneInfo/timezone/${zoneId}`);\n            if (metazoneInfo) {\n                // const zoneData = cldr.main(`dates/timeZoneNames/metazone/Acre`);\n                // TODO: determine metaZone for current temporal, for now, we use the last one :/\n                const metazone = metazoneInfo[metazoneInfo.length - 1]['usesMetazone']['_mzone'];\n                let metaZoneData = cldr.main(`dates/timeZoneNames/metazone/${metazone}/${style}/${type}`);\n                if (metaZoneData) {\n                    return metaZoneData;\n                } else {\n                    // type fallback, first generic, then standard\n                    metaZoneData = cldr.main(`dates/timeZoneNames/metazone/${metazone}/${style}/generic`);\n                    if (!metaZoneData) {\n                        metaZoneData = cldr.main(`dates/timeZoneNames/metazone/${metazone}/${style}/standard`);\n                    }\n                    if (metaZoneData) {\n                        return metaZoneData;\n                    } else {\n                        const mapZones = getOrCreateMapZones(cldr);\n                        // find preferred Zone and resolve again\n                        const preferredZone = mapZones[metazone][cldr.attributes.territory];\n                        if (preferredZone) {\n                            if (preferredZone !== zoneId) {\n                                return this._cachedResolveZoneIdText(cldr, preferredZone, style, type);\n                            }\n                        } else {\n                            // find golden Zone and resolve again\n                            const goldenZone = mapZones[metazone]['001'];\n                            if (goldenZone !== zoneId) {\n                                return this._cachedResolveZoneIdText(cldr, goldenZone, style, type);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    print(context, buf) {\n\n        //see http://www.unicode.org/reports/tr35/tr35-dates.html#Time_Zone_Names\n\n        const zone = context.getValueQuery(TemporalQueries.zoneId());\n        /* istanbul ignore if */ // shouldn't happen... getValueQuery throws before returning null\n        if (zone == null) {\n            return false;\n        }\n        if (zone.normalized() instanceof ZoneOffset) {\n            buf.append(zone.id());\n            return true;\n        }\n        const daylight = false;\n        const hasDaylightSupport = false;\n        /* TODO: currently js-joda-timezone does not support ZoneRules.isDaylightSavings() ... uncomment if it does\n         const temporal = context.temporal();\n         if (temporal.isSupported(ChronoField.INSTANT_SECONDS)) {\n            hasDaylightSupport = true;\n            const instant = Instant.ofEpochSecond(temporal.getLong(ChronoField.INSTANT_SECONDS));\n            daylight = zone.rules().isDaylightSavings(instant);\n        }*/\n        const tzType = hasDaylightSupport ? (daylight ? 'daylight' : 'standard') : 'generic';\n        const tzstyle = (this._textStyle.asNormal() === TextStyle.FULL ? 'long' : 'short');\n        loadCldrData(`main/${context.locale().localeString()}/timeZoneNames.json`);\n        const cldr = getOrCreateCldrInstance(context.locale().localeString());\n\n        const text = this._cachedResolveZoneIdText(cldr, zone.id(), tzstyle, tzType);\n        if (text) {\n            buf.append(text);\n        } else {\n            // fallback, print zoneId\n            buf.append(zone.id());\n        }\n        return true;\n    }\n\n    parse(context, text, position) {\n        const ids = {};\n        loadCldrData(`main/${context.locale().localeString()}/timeZoneNames.json`);\n        const cldr = getOrCreateCldrInstance(context.locale().localeString());\n\n        for (const id of ZoneRulesProvider.getAvailableZoneIds()) {\n            ids[id] = id;\n            const tzstyle = (this._textStyle.asNormal() === TextStyle.FULL ? 'long' : 'short');\n\n            const genericText = this._cachedResolveZoneIdText(cldr, id, tzstyle, 'generic');\n            if (genericText) {\n                ids[genericText] = id;\n            }\n            const standardText = this._cachedResolveZoneIdText(cldr, id, tzstyle, 'standard');\n            if (standardText) {\n                ids[standardText] = id;\n            }\n            const daylightText = this._cachedResolveZoneIdText(cldr, id, tzstyle, 'daylight');\n            if (daylightText) {\n                ids[daylightText] = id;\n            }\n        }\n        // threeten is using a (sorted) TreeMap... so we need to sort the keys\n        const sortedKeys = Object.keys(ids).sort(LENGTH_COMPARATOR);\n        for (const name of sortedKeys) {\n            if (context.subSequenceEquals(text, position, name, 0, name.length)) {\n                context.setParsedZone(ZoneId.of(ids[name]));\n                return position + name.length;\n            }\n        }\n        return ~position;\n    }\n\n    toString() {\n        return `ZoneText(${this._textStyle})`;\n    }\n}\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport {\n    _ as jodaInternal,\n    DateTimeFormatterBuilder,\n    ChronoField,\n    TextStyle\n} from '@js-joda/core';\n\nconst { MathUtil } = jodaInternal;\n//-----------------------------------------------------------------------\n/**\n * Prints or parses field text.\n * @private\n */\nexport default class LocalizedOffsetPrinterParser {\n    /**\n     * Constructor.\n     *\n     * @param {!TextStyle} textStyle  the text style, not null\n     */\n    constructor(textStyle) {\n        this._textStyle = textStyle;\n    }\n\n    textStyle() {\n        return this._textStyle;\n    }\n\n    print(context, buf) {\n        const offsetSecs = context.getValue(ChronoField.OFFSET_SECONDS);\n        /* istanbul ignore if */ // shouldn't happen... getValue throws for unsupported fields?\n        if (offsetSecs == null) {\n            return false;\n        }\n        buf.append('GMT');\n        if (this._textStyle === TextStyle.FULL) {\n            return new DateTimeFormatterBuilder.OffsetIdPrinterParser('', '+HH:MM:ss').print(context, buf);\n        }\n        const totalSecs = MathUtil.safeToInt(offsetSecs);\n        if (totalSecs !== 0) {\n            const absHours = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs, 3600), 100));  // anything larger than 99 silently dropped\n            const absMinutes = Math.abs(MathUtil.intMod(MathUtil.intDiv(totalSecs,60), 60));\n            const absSeconds = Math.abs(MathUtil.intMod(totalSecs, 60));\n            buf.append(totalSecs < 0 ? '-' : '+').append(absHours);\n            if (absMinutes > 0 || absSeconds > 0) {\n                buf.append(':')\n                    .append(MathUtil.intDiv(absMinutes, 10)).append(MathUtil.intMod(absMinutes,10));\n                if (absSeconds > 0) {\n                    buf.append(':')\n                        .append(MathUtil.intDiv(absSeconds, 10)).append(MathUtil.intMod(absSeconds, 10));\n                }\n            }\n        }\n        return true;\n    }\n\n    parse(context, text, position) {\n        if (context.subSequenceEquals(text, position, 'GMT', 0, 3) === false) {\n            return ~position;\n        }\n        position += 3;\n        if (this._textStyle === TextStyle.FULL) {\n            return new DateTimeFormatterBuilder.OffsetIdPrinterParser('', '+HH:MM:ss').parse(context, text, position);\n        }\n        const end = text.length;\n        if (position === end) {\n            return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position);\n        }\n        const sign = text.charAt(position);\n        if (sign !== '+' && sign !== '-') {\n            return context.setParsedField(ChronoField.OFFSET_SECONDS, 0, position, position);\n        }\n        const negative = (sign === '-' ? -1 : 1);\n        /* istanbul ignore if */ // cannot happen, already checked before\n        if (position === end) {\n            return ~position;\n        }\n        position++;\n        // hour\n        let ch = text.charAt(position);\n        if (ch < '0' || ch > '9') {\n            return ~position;\n        }\n        position++;\n        let hour = MathUtil.parseInt(ch);\n        if (position !== end) {\n            ch = text.charAt(position);\n            if (ch >= '0' && ch <= '9') {\n                hour = hour * 10 + MathUtil.parseInt(ch);\n                if (hour > 23) {\n                    return ~position;\n                }\n                position++;\n            }\n        }\n        if (position === end || text.charAt(position) !== ':') {\n            const offset = negative * 3600 * hour;\n            return context.setParsedField(ChronoField.OFFSET_SECONDS, offset, position, position);\n        }\n        position++;\n        // minute\n        if (position > end - 2) {\n            return ~position;\n        }\n        ch = text.charAt(position);\n        if (ch < '0' || ch > '9') {\n            return ~position;\n        }\n        position++;\n        let min = MathUtil.parseInt(ch);\n        ch = text.charAt(position);\n        if (ch < '0' || ch > '9') {\n            return ~position;\n        }\n        position++;\n        min = min * 10 + MathUtil.parseInt(ch);\n        if (min > 59) {\n            return ~position;\n        }\n        if (position === end || text.charAt(position) !== ':') {\n            const offset = negative * (3600 * hour + 60 * min);\n            return context.setParsedField(ChronoField.OFFSET_SECONDS, offset, position, position);\n        }\n        position++;\n        // second\n        if (position > end - 2) {\n            return ~position;\n        }\n        ch = text.charAt(position);\n        if (ch < '0' || ch > '9') {\n            return ~position;\n        }\n        position++;\n        let sec = MathUtil.parseInt(ch);\n        ch = text.charAt(position);\n        if (ch < '0' || ch > '9') {\n            return ~position;\n        }\n        position++;\n        sec = sec * 10 + MathUtil.parseInt(ch);\n        if (sec > 59) {\n            return ~position;\n        }\n        const offset = negative * (3600 * hour + 60 * min + sec);\n        return context.setParsedField(ChronoField.OFFSET_SECONDS, offset, position, position);\n    }\n\n    toString() {\n        return `LocalizedOffset(${this._textStyle})`;\n    }\n\n}\n\n//-----------------------------------------------------------------------\n","/**\n * @copyright (c) 2016, Philipp Thürwächter & Pattrick Hüper\n * @copyright (c) 2007-present, Stephen Colebourne & Michael Nascimento Santos\n * @license BSD-3-Clause (see LICENSE in the root directory of this source tree)\n */\n\nimport { DateTimeFormatterBuilder, IllegalArgumentException, SignStyle, TextStyle } from '@js-joda/core';\n\n//-----------------------------------------------------------------------\n/**\n * Prints or parses field text.\n * @private\n */\nexport default class TextPrinterParser {\n    /**\n     * Constructor.\n     *\n     * @param {!TemporalField} field  the field to output, not null\n     * @param {!TextStyle} textStyle  the text style, not null\n     * @param {!DateTimeProvider} provider  the text provider, not null\n     */\n    constructor(field, textStyle, provider) {\n        // validated by caller\n        this._field = field;\n        this._textStyle = textStyle;\n        this._provider = provider;\n    }\n\n    field() {\n        return this._field;\n    }\n\n    textStyle() {\n        return this._textStyle;\n    }\n\n    provider() {\n        return this._provider;\n    }\n\n    print(context, buf) {\n        const value = context.getValue(this._field);\n        if (value === null) {\n            return false;\n        }\n        const text = this._provider.getText(this._field, value, this._textStyle, context.locale());\n        if (text === null) {\n            return this._numberPrinterParser().print(context, buf);\n        }\n        buf.append(text);\n        return true;\n    }\n\n    parse(context, parseText, position) {\n        const length = parseText.length;\n        if (position < 0 || position > length) {\n            throw new IllegalArgumentException(`The position is invalid: ${position}`);\n        }\n        const style = (context.isStrict() ? this._textStyle : null);\n        const it = this._provider.getTextIterator(this._field, style, context.locale());\n        if (it != null) {\n            for (const entry of it) {\n                const itText = entry.key;\n                if (context.subSequenceEquals(itText, 0, parseText, position, itText.length)) {\n                    return context.setParsedField(this._field, entry.value, position, position + itText.length);\n                }\n            }\n            if (context.isStrict()) {\n                return ~position;\n            }\n        }\n        return this._numberPrinterParser().parse(context, parseText, position);\n    }\n\n    /**\n     * Create and cache a number printer parser.\n     * @return the number printer parser for this field, not null\n     */\n    _numberPrinterParser() {\n        if (this._currentNumberPrinterParser == null) {\n            this._currentNumberPrinterParser = new DateTimeFormatterBuilder.NumberPrinterParser(this._field, 1, 19, SignStyle.NORMAL);\n        }\n        return this._currentNumberPrinterParser;\n    }\n\n    toString() {\n        if (this._textStyle === TextStyle.FULL) {\n            return `Text(${this._field})`;\n        }\n        return `Text(${this._field},${this._textStyle})`;\n    }\n}\n\n//-----------------------------------------------------------------------\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport { _ as jodaInternal, DateTimeFormatterBuilder, SignStyle } from '@js-joda/core';\n\nimport { WeekFields } from '../../temporal/WeekFields';\n\nconst { StringBuilder } = jodaInternal;\n\nexport default class WeekFieldsPrinterParser {\n    constructor(letter, count) {\n        this._letter = letter;\n        this._count = count;\n    }\n\n    print(context, buf) {\n        const weekFields = WeekFields.of(context.locale());\n        const pp = this._evaluate(weekFields);\n        return pp.print(context, buf);\n    }\n\n    parse(context, text, position) {\n        const weekFields = WeekFields.of(context.locale());\n        const pp = this._evaluate(weekFields);\n        return pp.parse(context, text, position);\n    }\n\n    _evaluate(weekFields) {\n        let pp = null;\n        switch (this._letter) {\n            case 'e':  // day-of-week\n                pp = new DateTimeFormatterBuilder.NumberPrinterParser(weekFields.dayOfWeek(), this._count, 2, SignStyle.NOT_NEGATIVE);\n                break;\n            case 'c':  // day-of-week\n                pp = new DateTimeFormatterBuilder.NumberPrinterParser(weekFields.dayOfWeek(), this._count, 2, SignStyle.NOT_NEGATIVE);\n                break;\n            case 'w':  // week-of-year\n                pp = new DateTimeFormatterBuilder.NumberPrinterParser(weekFields.weekOfWeekBasedYear(), this._count, 2, SignStyle.NOT_NEGATIVE);\n                break;\n            case 'W':  // week-of-month\n                pp = new DateTimeFormatterBuilder.NumberPrinterParser(weekFields.weekOfMonth(), 1, 2, SignStyle.NOT_NEGATIVE);\n                break;\n            case 'Y':  // weekyear\n                if (this._count === 2) {\n                    pp = new DateTimeFormatterBuilder.ReducedPrinterParser(weekFields.weekBasedYear(), 2, 2, 0, DateTimeFormatterBuilder.ReducedPrinterParser.BASE_DATE);\n                } else {\n                    pp = new DateTimeFormatterBuilder.NumberPrinterParser(weekFields.weekBasedYear(), this._count, 19,\n                        (this._count < 4) ? SignStyle.NORMAL : SignStyle.EXCEEDS_PAD, -1);\n                }\n                break;\n        }\n        return pp;\n    }\n\n    toString() {\n        const sb = new StringBuilder(30);\n        sb.append('Localized(');\n        if (this._letter === 'Y') {\n            if (this._count === 1) {\n                sb.append('WeekBasedYear');\n            } else if (this._count === 2) {\n                sb.append('ReducedValue(WeekBasedYear,2,2,2000-01-01)');\n            } else {\n                sb.append('WeekBasedYear,').append(this._count).append(',')\n                    .append(19).append(',')\n                    .append((this._count < 4) ? SignStyle.NORMAL : SignStyle.EXCEEDS_PAD);\n            }\n        } else {\n            if (this._letter === 'c' || this._letter === 'e') {\n                sb.append('DayOfWeek');\n            } else if (this._letter === 'w') {\n                sb.append('WeekOfWeekBasedYear');\n            } else if (this._letter === 'W') {\n                sb.append('WeekOfMonth');\n            }\n            sb.append(',');\n            sb.append(this._count);\n        }\n        sb.append(')');\n        return sb.toString();\n    }\n}\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\nimport { use } from '@js-joda/core';\nimport plug from './plug';\nimport Locale from './Locale';\n\nuse(plug);\n\nexport {\n    Locale\n};\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\n/* eslint-disable no-param-reassign */\n\nimport CldrDateTimeFormatterBuilder from './format/cldr/CldrDateTimeFormatterBuilder';\nimport LocaleDateTimeFormatter from './format/LocaleDateTimeFormatter';\n\nimport './_init';\n\n/**\n * plugin Function, call using js-jodas use()\n *\n * @param jsJoda\n */\nexport default function (jsJoda) {\n    // inject all prototype properties (except constructor) from CldrDateTimeFormatterBuilder into DateTimeFormatterBuilder\n    Object.getOwnPropertyNames(CldrDateTimeFormatterBuilder.prototype).forEach((prop) => {\n        if (prop !== 'constructor') {\n            jsJoda.DateTimeFormatterBuilder.prototype[prop] = CldrDateTimeFormatterBuilder.prototype[prop];\n        }\n    });\n    // inject all prototype properties (except constructor) from LocaleDateTimeFormatter into DateTimeFormatter\n    Object.getOwnPropertyNames(LocaleDateTimeFormatter.prototype).forEach((prop) => {\n        if (prop !== 'constructor') {\n            jsJoda.DateTimeFormatter.prototype[prop] = LocaleDateTimeFormatter.prototype[prop];\n        }\n    });\n}\n","/*\n * @copyright (c) 2017, Philipp Thuerwaechter & Pattrick Hueper\n * @license BSD-3-Clause (see LICENSE.md in the root directory of this source tree)\n */\n\nimport {\n    _ as jodaInternal,\n    DateTimeException,\n    DayOfWeek,\n    ChronoField,\n    ChronoUnit,\n    IllegalArgumentException,\n    IllegalStateException,\n    IsoChronology,\n    IsoFields,\n    LocalDate,\n    ResolverStyle,\n    ValueRange,\n    Year\n} from '@js-joda/core';\nimport cldrData from 'cldr-data';\nimport Cldr from 'cldrjs';\n\nconst { MathUtil, assert: { requireNonNull, requireInstance } } = jodaInternal;\n\n//-----------------------------------------------------------------------\nconst DAY_OF_WEEK_RANGE = ValueRange.of(1, 7);\nconst WEEK_OF_MONTH_RANGE = ValueRange.of(0, 1, 4, 6);\nconst WEEK_OF_YEAR_RANGE = ValueRange.of(0, 1, 52, 54);\nconst WEEK_OF_WEEK_BASED_YEAR_RANGE = ValueRange.of(1, 52, 53);\nconst WEEK_BASED_YEAR_RANGE = ChronoField.YEAR.range();\n\n/* map from the string from cldr `firstDay()` to DayOfWeek */\nconst _weekDayMap = {\n    'mon': DayOfWeek.MONDAY,\n    'tue': DayOfWeek.TUESDAY,\n    'wed': DayOfWeek.WEDNESDAY,\n    'thu': DayOfWeek.THURSDAY,\n    'fri': DayOfWeek.FRIDAY,\n    'sat': DayOfWeek.SATURDAY,\n    'sun': DayOfWeek.SUNDAY,\n};\n\n/**\n * Field type that computes DayOfWeek, WeekOfMonth, and WeekOfYear\n * based on a WeekFields.\n * A separate Field instance is required for each different WeekFields;\n * combination of start of week and minimum number of days.\n * Constructors are provided to create fields for DayOfWeek, WeekOfMonth,\n * and WeekOfYear.\n */\nexport class ComputedDayOfField {\n\n    /**\n     * Returns a field to access the day of week,\n     * computed based on a WeekFields.\n     * <p>\n     * The WeekDefintion of the first day of the week is used with\n     * the ISO DAY_OF_WEEK field to compute week boundaries.\n     */\n    static ofDayOfWeekField(weekDef) {\n        return new ComputedDayOfField('DayOfWeek', weekDef,\n            ChronoUnit.DAYS, ChronoUnit.WEEKS, DAY_OF_WEEK_RANGE);\n    }\n\n    /**\n     * Returns a field to access the week of month,\n     * computed based on a WeekFields.\n     * @see WeekFields#weekOfMonth()\n     */\n    static ofWeekOfMonthField(weekDef) {\n        return new ComputedDayOfField('WeekOfMonth', weekDef,\n            ChronoUnit.WEEKS, ChronoUnit.MONTHS, WEEK_OF_MONTH_RANGE);\n    }\n\n    /**\n     * Returns a field to access the week of year,\n     * computed based on a WeekFields.\n     * @see WeekFields#weekOfYear()\n     */\n    static ofWeekOfYearField(weekDef) {\n        return new ComputedDayOfField('WeekOfYear', weekDef,\n            ChronoUnit.WEEKS, ChronoUnit.YEARS, WEEK_OF_YEAR_RANGE);\n    }\n\n    /**\n     * Returns a field to access the week of week-based-year,\n     * computed based on a WeekFields.\n     * @see WeekFields#weekOfWeekBasedYear()\n     */\n    static ofWeekOfWeekBasedYearField(weekDef) {\n        return new ComputedDayOfField('WeekOfWeekBasedYear', weekDef,\n            ChronoUnit.WEEKS, IsoFields.WEEK_BASED_YEARS, WEEK_OF_WEEK_BASED_YEAR_RANGE);\n    }\n\n    /**\n     * Returns a field to access the week-based-year,\n     * computed based on a WeekFields.\n     * @see WeekFields#weekBasedYear()\n     */\n    static ofWeekBasedYearField(weekDef) {\n        return new ComputedDayOfField('WeekBasedYear', weekDef,\n            IsoFields.WEEK_BASED_YEARS, ChronoUnit.FOREVER, WEEK_BASED_YEAR_RANGE);\n    }\n\n    /**\n     *@private\n     */\n    constructor(name, weekDef, baseUnit, rangeUnit, range) {\n        this._name = name;\n        this._weekDef = weekDef;\n        this._baseUnit = baseUnit;\n        this._rangeUnit = rangeUnit;\n        this._range = range;\n    }\n\n    getFrom(temporal) {\n        // Offset the ISO DOW by the start of this week\n        const sow = this._weekDef.firstDayOfWeek().value();\n        const dow = this._localizedDayOfWeek(temporal, sow);\n\n        if (this._rangeUnit === ChronoUnit.WEEKS) {\n            return dow;\n        } else if (this._rangeUnit === ChronoUnit.MONTHS) {\n            return this._localizedWeekOfMonth(temporal, dow);\n        } else if (this._rangeUnit === ChronoUnit.YEARS) {\n            return this._localizedWeekOfYear(temporal, dow);\n        } else if (this._rangeUnit === IsoFields.WEEK_BASED_YEARS) {\n            return this._localizedWOWBY(temporal);\n        } else if (this._rangeUnit === ChronoUnit.FOREVER) {\n            return this._localizedWBY(temporal);\n        } else {\n            throw new IllegalStateException('unreachable');\n        }\n    }\n\n    _localizedDayOfWeek(temporal, sow) {\n        const isoDow = temporal.get(ChronoField.DAY_OF_WEEK);\n        return MathUtil.floorMod(isoDow - sow, 7) + 1;\n    }\n\n    _localizedWeekOfMonth(temporal, dow) {\n        const dom = temporal.get(ChronoField.DAY_OF_MONTH);\n        const offset = this._startOfWeekOffset(dom, dow);\n        return ComputedDayOfField._computeWeek(offset, dom);\n    }\n\n    _localizedWeekOfYear(temporal, dow) {\n        const doy = temporal.get(ChronoField.DAY_OF_YEAR);\n        const offset = this._startOfWeekOffset(doy, dow);\n        return ComputedDayOfField._computeWeek(offset, doy);\n    }\n\n    _localizedWOWBY(temporal) {\n        const sow = this._weekDef.firstDayOfWeek().value();\n        const isoDow = temporal.get(ChronoField.DAY_OF_WEEK);\n        const dow = MathUtil.floorMod(isoDow - sow, 7) + 1;\n        const woy = this._localizedWeekOfYear(temporal, dow);\n        if (woy === 0) {\n            const previous = LocalDate.from(temporal).minus(1, ChronoUnit.WEEKS);\n            return this._localizedWeekOfYear(previous, dow) + 1;\n        } else if (woy >= 53) {\n            const offset = this._startOfWeekOffset(temporal.get(ChronoField.DAY_OF_YEAR), dow);\n            const year = temporal.get(ChronoField.YEAR);\n            const yearLen = Year.isLeap(year) ? 366 : 365;\n            const weekIndexOfFirstWeekNextYear = ComputedDayOfField._computeWeek(offset, yearLen + this._weekDef.minimalDaysInFirstWeek());\n            if (woy >= weekIndexOfFirstWeekNextYear) {\n                return (woy - (weekIndexOfFirstWeekNextYear - 1));\n            }\n        }\n        return woy;\n    }\n\n    _localizedWBY(temporal) {\n        const sow = this._weekDef.firstDayOfWeek().value();\n        const isoDow = temporal.get(ChronoField.DAY_OF_WEEK);\n        const dow = MathUtil.floorMod(isoDow - sow, 7) + 1;\n        const year = temporal.get(ChronoField.YEAR);\n        const woy = this._localizedWeekOfYear(temporal, dow);\n        if (woy === 0) {\n            return year - 1;\n        } else if (woy < 53) {\n            return year;\n        }\n        const offset = this._startOfWeekOffset(temporal.get(ChronoField.DAY_OF_YEAR), dow);\n        const yearLen = Year.isLeap(year) ? 366 : 365;\n        const weekIndexOfFirstWeekNextYear = ComputedDayOfField._computeWeek(offset, yearLen + this._weekDef.minimalDaysInFirstWeek());\n        if (woy >= weekIndexOfFirstWeekNextYear) {\n            return year + 1;\n        }\n        return year;\n    }\n\n    /**\n     * Returns an offset to align week start with a day of month or day of year.\n     *\n     * @param day the day; 1 through infinity\n     * @param dow the day of the week of that day; 1 through 7\n     * @return an offset in days to align a day with the start of the first 'full' week\n     */\n    _startOfWeekOffset(day, dow) {\n        // offset of first day corresponding to the day of week in first 7 days (zero origin)\n        const weekStart = MathUtil.floorMod(day - dow, 7);\n        let offset = -weekStart;\n        if (weekStart + 1 > this._weekDef.minimalDaysInFirstWeek()) {\n            // The previous week has the minimum days in the current month to be a 'week'\n            offset = 7 - weekStart;\n        }\n        return offset;\n    }\n\n    /**\n     * Returns the week number computed from the reference day and reference dayOfWeek.\n     *\n     * @param offset the offset to align a date with the start of week\n     *     from {@link #startOfWeekOffset}.\n     * @param day  the day for which to compute the week number\n     * @return the week number where zero is used for a partial week and 1 for the first full week\n     */\n    static _computeWeek(offset, day) {\n        return MathUtil.intDiv((7 + offset + (day - 1)), 7);\n    }\n\n    adjustInto(temporal, newValue) {\n        // Check the new value and get the old value of the field\n        const newVal = this._range.checkValidIntValue(newValue, this);\n        const currentVal = temporal.get(this);\n        if (newVal === currentVal) {\n            return temporal;\n        }\n        if (this._rangeUnit === ChronoUnit.FOREVER) {\n            // adjust in whole weeks so dow never changes\n            const baseWowby = temporal.get(this._weekDef.weekOfWeekBasedYear());\n            const diffWeeks = MathUtil.roundDown((newValue - currentVal) * 52.1775);\n            let result = temporal.plus(diffWeeks, ChronoUnit.WEEKS);\n            if (result.get(this) > newVal) {\n                // ended up in later week-based-year\n                // move to last week of previous year\n                const newWowby = result.get(this._weekDef.weekOfWeekBasedYear());\n                result = result.minus(newWowby, ChronoUnit.WEEKS);\n            } else {\n                if (result.get(this) < newVal) {\n                    // ended up in earlier week-based-year\n                    result = result.plus(2, ChronoUnit.WEEKS);\n                }\n                // reset the week-of-week-based-year\n                const newWowby = result.get(this._weekDef.weekOfWeekBasedYear());\n                result = result.plus(baseWowby - newWowby, ChronoUnit.WEEKS);\n                if (result.get(this) > newVal) {\n                    result = result.minus(1, ChronoUnit.WEEKS);\n                }\n            }\n            return result;\n        }\n        // Compute the difference and add that using the base using of the field\n        const delta = newVal - currentVal;\n        return temporal.plus(delta, this._baseUnit);\n    }\n\n    resolve(fieldValues, partialTemporal, resolverStyle) {\n        const sow = this._weekDef.firstDayOfWeek().value();\n        if (this._rangeUnit === ChronoUnit.WEEKS) {  // day-of-week\n            const value = fieldValues.remove(this);\n            const localDow = this._range.checkValidIntValue(value, this);\n            const isoDow = MathUtil.floorMod((sow - 1) + (localDow - 1), 7) + 1;\n            fieldValues.put(ChronoField.DAY_OF_WEEK, isoDow);\n            return null;\n        }\n        if (fieldValues.containsKey(ChronoField.DAY_OF_WEEK) === false) {\n            return null;\n        }\n\n        // week-based-year\n        if (this._rangeUnit === ChronoUnit.FOREVER) {\n            if (fieldValues.containsKey(this._weekDef.weekOfWeekBasedYear()) === false) {\n                return null;\n            }\n            // const chrono = IsoChronology.INSTANCE; //TODO: Chronology.from(partialTemporal);  // defaults to ISO\n            const isoDow = ChronoField.DAY_OF_WEEK.checkValidIntValue(fieldValues.get(ChronoField.DAY_OF_WEEK));\n            const dow = MathUtil.floorMod(isoDow - sow, 7) + 1;\n            const wby = this.range().checkValidIntValue(fieldValues.get(this), this);\n            let date;\n            let days;\n            if (resolverStyle === ResolverStyle.LENIENT) {\n                date = LocalDate.of(wby, 1, this._weekDef.minimalDaysInFirstWeek()); //TODO: chrono.date(wby, 1, this._weekDef.minimalDaysInFirstWeek());\n                const wowby = fieldValues.get(this._weekDef.weekOfWeekBasedYear());\n                const dateDow = this._localizedDayOfWeek(date, sow);\n                const weeks = wowby - this._localizedWeekOfYear(date, dateDow);\n                days = weeks * 7 + (dow - dateDow);\n            } else {\n                date = LocalDate.of(wby, 1, this._weekDef.minimalDaysInFirstWeek()); //TODO: chrono.date(wby, 1, this._weekDef.minimalDaysInFirstWeek());\n                const wowby = this._weekDef.weekOfWeekBasedYear().range().checkValidIntValue(\n                    fieldValues.get(this._weekDef.weekOfWeekBasedYear()), this._weekDef.weekOfWeekBasedYear);\n                const dateDow = this._localizedDayOfWeek(date, sow);\n                const weeks = wowby - this._localizedWeekOfYear(date, dateDow);\n                days = weeks * 7 + (dow - dateDow);\n            }\n            date = date.plus(days, ChronoUnit.DAYS);\n            if (resolverStyle === ResolverStyle.STRICT) {\n                if (date.getLong(this) !== fieldValues.get(this)) {\n                    throw new DateTimeException('Strict mode rejected date parsed to a different year');\n                }\n            }\n            fieldValues.remove(this);\n            fieldValues.remove(this._weekDef.weekOfWeekBasedYear());\n            fieldValues.remove(ChronoField.DAY_OF_WEEK);\n            return date;\n        }\n\n        if (fieldValues.containsKey(ChronoField.YEAR) === false) {\n            return null;\n        }\n        const isoDow = ChronoField.DAY_OF_WEEK.checkValidIntValue(fieldValues.get(ChronoField.DAY_OF_WEEK));\n        const dow = MathUtil.floorMod(isoDow - sow, 7) + 1;\n        const year = ChronoField.YEAR.checkValidIntValue(fieldValues.get(ChronoField.YEAR));\n        // const chrono = IsoChronology.INSTANCE; //TODO: Chronology.from(partialTemporal);  // defaults to ISO\n        if (this._rangeUnit === ChronoUnit.MONTHS) {  // week-of-month\n            if (fieldValues.containsKey(ChronoField.MONTH_OF_YEAR) === false) {\n                return null;\n            }\n            const value = fieldValues.remove(this);\n            let date;\n            let days;\n            if (resolverStyle === ResolverStyle.LENIENT) {\n                const month = fieldValues.get(ChronoField.MONTH_OF_YEAR);\n                date = LocalDate.of(year, 1, 1); // TODO: chrono.date(year, 1, 1);\n                date = date.plus(month - 1, ChronoUnit.MONTHS);\n                const dateDow = this._localizedDayOfWeek(date, sow);\n                const weeks = value - this._localizedWeekOfMonth(date, dateDow);\n                days = weeks * 7 + (dow - dateDow);\n            } else {\n                const month = ChronoField.MONTH_OF_YEAR.checkValidIntValue(fieldValues.get(ChronoField.MONTH_OF_YEAR));\n                date = LocalDate.of(year, month, 8); // TODO: chrono.date(year, month, 8);\n                const dateDow = this._localizedDayOfWeek(date, sow);\n                const wom = this._range.checkValidIntValue(value, this);\n                const weeks = wom - this._localizedWeekOfMonth(date, dateDow);\n                days = weeks * 7 + (dow - dateDow);\n            }\n            date = date.plus(days, ChronoUnit.DAYS);\n            if (resolverStyle === ResolverStyle.STRICT) {\n                if (date.getLong(ChronoField.MONTH_OF_YEAR) !== fieldValues.get(ChronoField.MONTH_OF_YEAR)) {\n                    throw new DateTimeException('Strict mode rejected date parsed to a different month');\n                }\n            }\n            fieldValues.remove(this);\n            fieldValues.remove(ChronoField.YEAR);\n            fieldValues.remove(ChronoField.MONTH_OF_YEAR);\n            fieldValues.remove(ChronoField.DAY_OF_WEEK);\n            return date;\n        } else if (this._rangeUnit === ChronoUnit.YEARS) {  // week-of-year\n            const value = fieldValues.remove(this);\n            let date = LocalDate.of(year, 1, 1); // TODO: chrono.date(year, 1, 1);\n            let days;\n            if (resolverStyle === ResolverStyle.LENIENT) {\n                const dateDow = this._localizedDayOfWeek(date, sow);\n                const weeks = value - this._localizedWeekOfYear(date, dateDow);\n                days = weeks * 7 + (dow - dateDow);\n            } else {\n                const dateDow = this._localizedDayOfWeek(date, sow);\n                const woy = this._range.checkValidIntValue(value, this);\n                const weeks = woy - this._localizedWeekOfYear(date, dateDow);\n                days = weeks * 7 + (dow - dateDow);\n            }\n            date = date.plus(days, ChronoUnit.DAYS);\n            if (resolverStyle === ResolverStyle.STRICT) {\n                if (date.getLong(ChronoField.YEAR) !== fieldValues.get(ChronoField.YEAR)) {\n                    throw new DateTimeException('Strict mode rejected date parsed to a different year');\n                }\n            }\n            fieldValues.remove(this);\n            fieldValues.remove(ChronoField.YEAR);\n            fieldValues.remove(ChronoField.DAY_OF_WEEK);\n            return date;\n        } else {\n            throw new IllegalStateException('unreachable');\n        }\n    }\n\n    //-----------------------------------------------------------------------\n    name() {\n        return this._name;\n    }\n\n    baseUnit() {\n        return this._baseUnit;\n    }\n\n    rangeUnit() {\n        return this._rangeUnit;\n    }\n\n    range() {\n        return this._range;\n    }\n\n    //-----------------------------------------------------------------------\n    isDateBased() {\n        return true;\n    }\n\n    isTimeBased() {\n        return false;\n    }\n\n    isSupportedBy(temporal) {\n        if (temporal.isSupported(ChronoField.DAY_OF_WEEK)) {\n            if (this._rangeUnit === ChronoUnit.WEEKS) {\n                return true;\n            } else if (this._rangeUnit === ChronoUnit.MONTHS) {\n                return temporal.isSupported(ChronoField.DAY_OF_MONTH);\n            } else if (this._rangeUnit === ChronoUnit.YEARS) {\n                return temporal.isSupported(ChronoField.DAY_OF_YEAR);\n            } else if (this._rangeUnit === IsoFields.WEEK_BASED_YEARS) {\n                return temporal.isSupported(ChronoField.EPOCH_DAY);\n            } else if (this._rangeUnit === ChronoUnit.FOREVER) {\n                return temporal.isSupported(ChronoField.EPOCH_DAY);\n            }\n        }\n        return false;\n    }\n\n    rangeRefinedBy(temporal) {\n        if (this._rangeUnit === ChronoUnit.WEEKS) {\n            return this._range;\n        }\n\n        let field = null;\n        if (this._rangeUnit === ChronoUnit.MONTHS) {\n            field = ChronoField.DAY_OF_MONTH;\n        } else if (this._rangeUnit === ChronoUnit.YEARS) {\n            field = ChronoField.DAY_OF_YEAR;\n        } else if (this._rangeUnit === IsoFields.WEEK_BASED_YEARS) {\n            return this._rangeWOWBY(temporal);\n        } else if (this._rangeUnit === ChronoUnit.FOREVER) {\n            return temporal.range(ChronoField.YEAR);\n        } else {\n            throw new IllegalStateException('unreachable');\n        }\n\n        // Offset the ISO DOW by the start of this week\n        const sow = this._weekDef.firstDayOfWeek().value();\n        const isoDow = temporal.get(ChronoField.DAY_OF_WEEK);\n        const dow = MathUtil.floorMod(isoDow - sow, 7) + 1;\n\n        const offset = this._startOfWeekOffset(temporal.get(field), dow);\n        const fieldRange = temporal.range(field);\n        return ValueRange.of(ComputedDayOfField._computeWeek(offset, fieldRange.minimum()),\n            ComputedDayOfField._computeWeek(offset, fieldRange.maximum()));\n    }\n\n    _rangeWOWBY(temporal) {\n        const sow = this._weekDef.firstDayOfWeek().value();\n        const isoDow = temporal.get(ChronoField.DAY_OF_WEEK);\n        const dow = MathUtil.floorMod(isoDow - sow, 7) + 1;\n        const woy = this._localizedWeekOfYear(temporal, dow);\n        if (woy === 0) {\n            // TODO: we use IsoChronology for now\n            return this._rangeWOWBY(IsoChronology.INSTANCE.date(temporal).minus(2, ChronoUnit.WEEKS));\n            // return this._rangeWOWBY(Chronology.from(temporal).date(temporal).minus(2, ChronoUnit.WEEKS));\n        }\n        const offset = this._startOfWeekOffset(temporal.get(ChronoField.DAY_OF_YEAR), dow);\n        const year = temporal.get(ChronoField.YEAR);\n        const yearLen = Year.isLeap(year) ? 366 : 365;\n        const weekIndexOfFirstWeekNextYear = ComputedDayOfField._computeWeek(offset, yearLen + this._weekDef.minimalDaysInFirstWeek());\n        if (woy >= weekIndexOfFirstWeekNextYear) {\n            // TODO: we use IsoChronology for now\n            return this._rangeWOWBY(IsoChronology.INSTANCE.date(temporal).plus(2, ChronoUnit.WEEKS));\n            // return this._rangeWOWBY(Chronology.from(temporal).date(temporal).plus(2, ChronoUnit.WEEKS));\n        }\n        return ValueRange.of(1, weekIndexOfFirstWeekNextYear - 1);\n    }\n\n    displayName(locale) {\n        requireNonNull(locale, 'locale');\n        if (this._rangeUnit === ChronoUnit.YEARS) {  // week-of-year\n            return 'Week';\n        }\n        return this.toString();\n    }\n\n    //-----------------------------------------------------------------------\n    toString() {\n        return this._name + '[' + this._weekDef.toString() + ']';\n    }\n}\n\n/**\n * The cache of rules by firstDayOfWeek plus minimalDays.\n * Initialized first to be available for definition of ISO, etc.\n */\nconst WeekFieldsCache = new Map();\n\n\n/**\n * Localized definitions of the day-of-week, week-of-month and week-of-year fields.\n * <p>\n * A standard week is seven days long, but cultures have different definitions for some\n * other aspects of a week. This class represents the definition of the week, for the\n * purpose of providing {@link TemporalField} instances.\n * <p>\n * WeekFields provides three fields,\n * {@link #dayOfWeek()}, {@link #weekOfMonth()}, and {@link #weekOfYear()}\n * that provide access to the values from any {@link Temporal temporal object}.\n * <p>\n * The computations for day-of-week, week-of-month, and week-of-year are based\n * on the  {@link ChronoField#YEAR proleptic-year},\n * {@link ChronoField#MONTH_OF_YEAR month-of-year},\n * {@link ChronoField#DAY_OF_MONTH day-of-month}, and\n * {@link ChronoField#DAY_OF_WEEK ISO day-of-week} which are based on the\n * {@link ChronoField#EPOCH_DAY epoch-day} and the chronology.\n * The values may not be aligned with the {@link ChronoField#YEAR_OF_ERA year-of-Era}\n * depending on the Chronology.\n * <p>A week is defined by:\n * <ul>\n * <li>The first day-of-week.\n * For example, the ISO-8601 standard considers Monday to be the first day-of-week.\n * <li>The minimal number of days in the first week.\n * For example, the ISO-8601 standard counts the first week as needing at least 4 days.\n * </ul><p>\n * Together these two values allow a year or month to be divided into weeks.\n * <p>\n * <h3>Week of Month</h3>\n * One field is used: week-of-month.\n * The calculation ensures that weeks never overlap a month boundary.\n * The month is divided into periods where each period starts on the defined first day-of-week.\n * The earliest period is referred to as week 0 if it has less than the minimal number of days\n * and week 1 if it has at least the minimal number of days.\n * <p>\n * <table cellpadding=\"0\" cellspacing=\"3\" border=\"0\" style=\"text-align: left; width: 50%;\">\n * <caption>Examples of WeekFields</caption>\n * <tr><th>Date</th><td>Day-of-week</td>\n *  <td>First day: Monday<br>Minimal days: 4</td><td>First day: Monday<br>Minimal days: 5</td></tr>\n * <tr><th>2008-12-31</th><td>Wednesday</td>\n *  <td>Week 5 of December 2008</td><td>Week 5 of December 2008</td></tr>\n * <tr><th>2009-01-01</th><td>Thursday</td>\n *  <td>Week 1 of January 2009</td><td>Week 0 of January 2009</td></tr>\n * <tr><th>2009-01-04</th><td>Sunday</td>\n *  <td>Week 1 of January 2009</td><td>Week 0 of January 2009</td></tr>\n * <tr><th>2009-01-05</th><td>Monday</td>\n *  <td>Week 2 of January 2009</td><td>Week 1 of January 2009</td></tr>\n * </table>\n * <p>\n * <h3>Week of Year</h3>\n * One field is used: week-of-year.\n * The calculation ensures that weeks never overlap a year boundary.\n * The year is divided into periods where each period starts on the defined first day-of-week.\n * The earliest period is referred to as week 0 if it has less than the minimal number of days\n * and week 1 if it has at least the minimal number of days.\n * <p>\n * This class is immutable and thread-safe.\n */\nexport class WeekFields {\n    // implementation notes\n    // querying week-of-month or week-of-year should return the week value bound within the month/year\n    // however, setting the week value should be lenient (use plus/minus weeks)\n    // allow week-of-month outer range [0 to 5]\n    // allow week-of-year outer range [0 to 53]\n    // this is because callers shouldn't be expected to know the details of validity\n\n    /**\n     * function overloading for {@link WeekFields#of}\n     *\n     * if called with 1 arguments then {@link WeekFields.ofLocale} is executed.\n     *\n     * Otherwise {@link WeekFields.ofFirstDayOfWeekMinDays} is executed.\n     *\n     * @param {!DayOfWeek | Locale} firstDayOrLocale\n     * @param {Number} minDays\n     * @returns {WeekFields} this for chaining\n     */\n    static of(firstDayOrLocale, minDays) {\n        if (minDays === undefined) {\n            return WeekFields.ofLocale(firstDayOrLocale);\n        } else {\n            return WeekFields.ofFirstDayOfWeekMinDays(firstDayOrLocale, minDays);\n        }\n    }\n\n    /**\n     * Obtains an instance of {@code WeekFields} appropriate for a locale.\n     * <p>\n     * This will look up appropriate values from the provider of localization data.\n     *\n     * @param {!Locale} locale  the locale to use, not null\n     * @return the week-definition, not null\n     */\n    static ofLocale(locale) {\n        requireNonNull(locale, 'locale');\n\n        Cldr.load(cldrData('supplemental/weekData.json'));\n        const cldr = new Cldr(locale.localeString());\n        const worldRegion = '001';\n        const weekData = cldr.get('supplemental/weekData');\n        let dow = _weekDayMap[weekData.firstDay[locale.country()]];\n        if (!dow) {\n            dow = _weekDayMap[weekData.firstDay[worldRegion]];\n        }\n        let minDays = weekData.minDays[locale.country()];\n        if (!minDays) {\n            minDays = weekData.minDays[worldRegion];\n        }\n        return WeekFields.ofFirstDayOfWeekMinDays(dow, minDays);\n    }\n\n    /**\n     * Obtains an instance of {@code WeekFields} from the first day-of-week and minimal days.\n     * <p>\n     * The first day-of-week defines the ISO {@code DayOfWeek} that is day 1 of the week.\n     * The minimal number of days in the first week defines how many days must be present\n     * in a month or year, starting from the first day-of-week, before the week is counted\n     * as the first week. A value of 1 will count the first day of the month or year as part\n     * of the first week, whereas a value of 7 will require the whole seven days to be in\n     * the new month or year.\n     * <p>\n     * WeekFields instances are singletons; for each unique combination\n     * of {@code firstDayOfWeek} and {@code minimalDaysInFirstWeek} the\n     * the same instance will be returned.\n     *\n     * @param {!DayOfWeek} firstDayOfWeek  the first day of the week, not null\n     * @param {!Number} minimalDaysInFirstWeek  the minimal number of days in the first week, from\n     *     1 to 7\n     * @return {WeekFields} the week-definition, not null\n     * @throws IllegalArgumentException if the minimal days value is less than one\n     *      or greater than 7\n     */\n    static ofFirstDayOfWeekMinDays(firstDayOfWeek, minimalDaysInFirstWeek) {\n        requireNonNull(firstDayOfWeek, 'firstDayOfWeek');\n        requireInstance(firstDayOfWeek, DayOfWeek, 'firstDayOfWeek');\n        requireNonNull(minimalDaysInFirstWeek, 'minimalDaysInFirstWeek');\n        const key = firstDayOfWeek.toString() + minimalDaysInFirstWeek;\n        let rules = WeekFieldsCache.get(key);\n        if (rules == null) {\n            rules = new WeekFields(firstDayOfWeek, minimalDaysInFirstWeek);\n            WeekFieldsCache.set(key, rules);\n            rules = WeekFieldsCache.get(key);\n        }\n        return rules;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Creates an instance of the definition.\n     *\n     * @param {!DayOfWeek} firstDayOfWeek  the first day of the week, not null\n     * @param {!Number} minimalDaysInFirstWeek  the minimal number of days in the first week, from\n     *     1 to 7\n     * @throws IllegalArgumentException if the minimal days value is invalid\n     *\n     * @private\n     */\n    constructor(firstDayOfWeek, minimalDaysInFirstWeek) {\n        requireNonNull(firstDayOfWeek, 'firstDayOfWeek');\n        requireInstance(firstDayOfWeek, DayOfWeek, 'firstDayOfWeek');\n        requireNonNull(minimalDaysInFirstWeek, 'minimalDaysInFirstWeek');\n        if (minimalDaysInFirstWeek < 1 || minimalDaysInFirstWeek > 7) {\n            throw new IllegalArgumentException('Minimal number of days is invalid');\n        }\n        this._firstDayOfWeek = firstDayOfWeek;\n        this._minimalDays = minimalDaysInFirstWeek;\n        this._dayOfWeek = ComputedDayOfField.ofDayOfWeekField(this);\n        this._weekOfMonth = ComputedDayOfField.ofWeekOfMonthField(this);\n        this._weekOfYear = ComputedDayOfField.ofWeekOfYearField(this);\n        this._weekOfWeekBasedYear = ComputedDayOfField.ofWeekOfWeekBasedYearField(this);\n        this._weekBasedYear = ComputedDayOfField.ofWeekBasedYearField(this);\n        Cldr.load(cldrData('supplemental/likelySubtags.json'));\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Gets the first day-of-week.\n     * <p>\n     * The first day-of-week varies by culture.\n     * For example, the US uses Sunday, while France and the ISO-8601 standard use Monday.\n     * This method returns the first day using the standard {@code DayOfWeek} enum.\n     *\n     * @return {DayOfWeek} the first day-of-week, not null\n     */\n    firstDayOfWeek() {\n        return this._firstDayOfWeek;\n    }\n\n    /**\n     * Gets the minimal number of days in the first week.\n     * <p>\n     * The number of days considered to define the first week of a month or year\n     * varies by culture.\n     * For example, the ISO-8601 requires 4 days (more than half a week) to\n     * be present before counting the first week.\n     *\n     * @return {Number} the minimal number of days in the first week of a month or year, from 1 to 7\n     */\n    minimalDaysInFirstWeek() {\n        return this._minimalDays;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Returns a field to access the day of week based on this {@code WeekFields}.\n     * <p>\n     * This is similar to {@link ChronoField#DAY_OF_WEEK} but uses values for\n     * the day-of-week based on this {@code WeekFields}.\n     * The days are numbered from 1 to 7 where the\n     * {@link #getFirstDayOfWeek() first day-of-week} is assigned the value 1.\n     * <p>\n     * For example, if the first day-of-week is Sunday, then that will have the\n     * value 1, with other days ranging from Monday as 2 to Saturday as 7.\n     * <p>\n     * In the resolving phase of parsing, a localized day-of-week will be converted\n     * to a standardized {@code ChronoField} day-of-week.\n     * The day-of-week must be in the valid range 1 to 7.\n     * Other fields in this class build dates using the standardized day-of-week.\n     *\n     * @return {TemporalField} a field providing access to the day-of-week with localized\n     *     numbering, not null\n     */\n    dayOfWeek() {\n        return this._dayOfWeek;\n    }\n\n    /**\n     * Returns a field to access the week of month based on this {@code WeekFields}.\n     * <p>\n     * This represents the concept of the count of weeks within the month where weeks\n     * start on a fixed day-of-week, such as Monday.\n     * This field is typically used with {@link WeekFields#dayOfWeek()}.\n     * <p>\n     * Week one (1) is the week starting on the {@link WeekFields#firstDayOfWeek}\n     * where there are at least {@link WeekFields#getMinimalDaysInFirstWeek()} days in the month.\n     * Thus, week one may start up to {@code minDays} days before the start of the month.\n     * If the first week starts after the start of the month then the period before is week zero\n     * (0).\n     * <p>\n     * For example:<br>\n     * - if the 1st day of the month is a Monday, week one starts on the 1st and there is no week\n     * zero<br>\n     * - if the 2nd day of the month is a Monday, week one starts on the 2nd and the 1st is in week\n     * zero<br>\n     * - if the 4th day of the month is a Monday, week one starts on the 4th and the 1st to 3rd is\n     * in week zero<br>\n     * - if the 5th day of the month is a Monday, week two starts on the 5th and the 1st to 4th is\n     * in week one<br>\n     * <p>\n     * This field can be used with any calendar system.\n     * <p>\n     * In the resolving phase of parsing, a date can be created from a year,\n     * week-of-month, month-of-year and day-of-week.\n     * <p>\n     * In {@linkplain ResolverStyle#STRICT strict mode}, all four fields are\n     * validated against their range of valid values. The week-of-month field\n     * is validated to ensure that the resulting month is the month requested.\n     * <p>\n     * In {@linkplain ResolverStyle#SMART smart mode}, all four fields are\n     * validated against their range of valid values. The week-of-month field\n     * is validated from 0 to 6, meaning that the resulting date can be in a\n     * different month to that specified.\n     * <p>\n     * In {@linkplain ResolverStyle#LENIENT lenient mode}, the year and day-of-week\n     * are validated against the range of valid values. The resulting date is calculated\n     * equivalent to the following four stage approach.\n     * First, create a date on the first day of the first week of January in the requested year.\n     * Then take the month-of-year, subtract one, and add the amount in months to the date.\n     * Then take the week-of-month, subtract one, and add the amount in weeks to the date.\n     * Finally, adjust to the correct day-of-week within the localized week.\n     *\n     * @return {TemporalField} a field providing access to the week-of-month, not null\n     */\n    weekOfMonth() {\n        return this._weekOfMonth;\n    }\n\n    /**\n     * Returns a field to access the week of year based on this {@code WeekFields}.\n     * <p>\n     * This represents the concept of the count of weeks within the year where weeks\n     * start on a fixed day-of-week, such as Monday.\n     * This field is typically used with {@link WeekFields#dayOfWeek()}.\n     * <p>\n     * Week one(1) is the week starting on the {@link WeekFields#firstDayOfWeek}\n     * where there are at least {@link WeekFields#getMinimalDaysInFirstWeek()} days in the year.\n     * Thus, week one may start up to {@code minDays} days before the start of the year.\n     * If the first week starts after the start of the year then the period before is week zero\n     * (0).\n     * <p>\n     * For example:<br>\n     * - if the 1st day of the year is a Monday, week one starts on the 1st and there is no week\n     * zero<br>\n     * - if the 2nd day of the year is a Monday, week one starts on the 2nd and the 1st is in week\n     * zero<br>\n     * - if the 4th day of the year is a Monday, week one starts on the 4th and the 1st to 3rd is\n     * in week zero<br>\n     * - if the 5th day of the year is a Monday, week two starts on the 5th and the 1st to 4th is\n     * in week one<br>\n     * <p>\n     * This field can be used with any calendar system.\n     * <p>\n     * In the resolving phase of parsing, a date can be created from a year,\n     * week-of-year and day-of-week.\n     * <p>\n     * In {@linkplain ResolverStyle#STRICT strict mode}, all three fields are\n     * validated against their range of valid values. The week-of-year field\n     * is validated to ensure that the resulting year is the year requested.\n     * <p>\n     * In {@linkplain ResolverStyle#SMART smart mode}, all three fields are\n     * validated against their range of valid values. The week-of-year field\n     * is validated from 0 to 54, meaning that the resulting date can be in a\n     * different year to that specified.\n     * <p>\n     * In {@linkplain ResolverStyle#LENIENT lenient mode}, the year and day-of-week\n     * are validated against the range of valid values. The resulting date is calculated\n     * equivalent to the following three stage approach.\n     * First, create a date on the first day of the first week in the requested year.\n     * Then take the week-of-year, subtract one, and add the amount in weeks to the date.\n     * Finally, adjust to the correct day-of-week within the localized week.\n     *\n     * @return {TemporalField} a field providing access to the week-of-year, not null\n     */\n    weekOfYear() {\n        return this._weekOfYear;\n    }\n\n    /**\n     * Returns a field to access the week of a week-based-year based on this {@code WeekFields}.\n     * <p>\n     * This represents the concept of the count of weeks within the year where weeks\n     * start on a fixed day-of-week, such as Monday and each week belongs to exactly one year.\n     * This field is typically used with {@link WeekFields#dayOfWeek()} and\n     * {@link WeekFields#weekBasedYear()}.\n     * <p>\n     * Week one(1) is the week starting on the {@link WeekFields#firstDayOfWeek}\n     * where there are at least {@link WeekFields#getMinimalDaysInFirstWeek()} days in the year.\n     * If the first week starts after the start of the year then the period before\n     * is in the last week of the previous year.\n     * <p>\n     * For example:<br>\n     * - if the 1st day of the year is a Monday, week one starts on the 1st<br>\n     * - if the 2nd day of the year is a Monday, week one starts on the 2nd and\n     *   the 1st is in the last week of the previous year<br>\n     * - if the 4th day of the year is a Monday, week one starts on the 4th and\n     *   the 1st to 3rd is in the last week of the previous year<br>\n     * - if the 5th day of the year is a Monday, week two starts on the 5th and\n     *   the 1st to 4th is in week one<br>\n     * <p>\n     * This field can be used with any calendar system.\n     * <p>\n     * In the resolving phase of parsing, a date can be created from a week-based-year,\n     * week-of-year and day-of-week.\n     * <p>\n     * In {@linkplain ResolverStyle#STRICT strict mode}, all three fields are\n     * validated against their range of valid values. The week-of-year field\n     * is validated to ensure that the resulting week-based-year is the\n     * week-based-year requested.\n     * <p>\n     * In {@linkplain ResolverStyle#SMART smart mode}, all three fields are\n     * validated against their range of valid values. The week-of-week-based-year field\n     * is validated from 1 to 53, meaning that the resulting date can be in the\n     * following week-based-year to that specified.\n     * <p>\n     * In {@linkplain ResolverStyle#LENIENT lenient mode}, the year and day-of-week\n     * are validated against the range of valid values. The resulting date is calculated\n     * equivalent to the following three stage approach.\n     * First, create a date on the first day of the first week in the requested week-based-year.\n     * Then take the week-of-week-based-year, subtract one, and add the amount in weeks to the date.\n     * Finally, adjust to the correct day-of-week within the localized week.\n     *\n     * @return {TemporalField} a field providing access to the week-of-week-based-year, not null\n     */\n    weekOfWeekBasedYear() {\n        return this._weekOfWeekBasedYear;\n    }\n\n    /**\n     * Returns a field to access the year of a week-based-year based on this {@code WeekFields}.\n     * <p>\n     * This represents the concept of the year where weeks start on a fixed day-of-week,\n     * such as Monday and each week belongs to exactly one year.\n     * This field is typically used with {@link WeekFields#dayOfWeek()} and\n     * {@link WeekFields#weekOfWeekBasedYear()}.\n     * <p>\n     * Week one(1) is the week starting on the {@link WeekFields#firstDayOfWeek}\n     * where there are at least {@link WeekFields#getMinimalDaysInFirstWeek()} days in the year.\n     * Thus, week one may start before the start of the year.\n     * If the first week starts after the start of the year then the period before\n     * is in the last week of the previous year.\n     * <p>\n     * This field can be used with any calendar system.\n     * <p>\n     * In the resolving phase of parsing, a date can be created from a week-based-year,\n     * week-of-year and day-of-week.\n     * <p>\n     * In {@linkplain ResolverStyle#STRICT strict mode}, all three fields are\n     * validated against their range of valid values. The week-of-year field\n     * is validated to ensure that the resulting week-based-year is the\n     * week-based-year requested.\n     * <p>\n     * In {@linkplain ResolverStyle#SMART smart mode}, all three fields are\n     * validated against their range of valid values. The week-of-week-based-year field\n     * is validated from 1 to 53, meaning that the resulting date can be in the\n     * following week-based-year to that specified.\n     * <p>\n     * In {@linkplain ResolverStyle#LENIENT lenient mode}, the year and day-of-week\n     * are validated against the range of valid values. The resulting date is calculated\n     * equivalent to the following three stage approach.\n     * First, create a date on the first day of the first week in the requested week-based-year.\n     * Then take the week-of-week-based-year, subtract one, and add the amount in weeks to the date.\n     * Finally, adjust to the correct day-of-week within the localized week.\n     *\n     * @return {TemporalField} a field providing access to the week-based-year, not null\n     */\n    weekBasedYear() {\n        return this._weekBasedYear;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * Checks if this {@code WeekFields} is equal to the specified other.\n     * <p>\n     * The comparison is based on the entire state of the rules, which is\n     * the first day-of-week and minimal days.\n     *\n     * @param {*} other  the other rules to compare to, null returns false\n     * @return true if this is equal to the specified rules\n     */\n    equals(other) {\n        if (this === other) {\n            return true;\n        }\n        if (other instanceof WeekFields) {\n            return this.hashCode() === other.hashCode();\n        }\n        return false;\n    }\n\n    /**\n     * A hash code for this {@code WeekFields}.\n     *\n     * @return a suitable hash code\n     */\n    hashCode() {\n        return this._firstDayOfWeek.ordinal() * 7 + this._minimalDays;\n    }\n\n    //-----------------------------------------------------------------------\n    /**\n     * A string representation of this {@code WeekFields} instance.\n     *\n     * @return the string representation, not null\n     */\n    toString() {\n        return 'WeekFields[' + this._firstDayOfWeek + ',' + this._minimalDays + ']';\n    }\n\n}\n\nexport function _init() {\n    /**\n     * The ISO-8601 definition, where a week starts on Monday and the first week\n     * has a minimum of 4 days.\n     * <p>\n     * The ISO-8601 standard defines a calendar system based on weeks.\n     * It uses the week-based-year and week-of-week-based-year concepts to split\n     * up the passage of days instead of the standard year/month/day.\n     * <p>\n     * Note that the first week may start in the previous calendar year.\n     * Note also that the first few days of a calendar year may be in the\n     * week-based-year corresponding to the previous calendar year.\n     */\n    WeekFields.ISO = WeekFields.of(DayOfWeek.MONDAY, 4);\n\n    /**\n     * The common definition of a week that starts on Sunday.\n     * <p>\n     * Defined as starting on Sunday and with a minimum of 1 day in the month.\n     * This week definition is in use in the US and other European countries.\n     *\n     */\n    WeekFields.SUNDAY_START = WeekFields.of(DayOfWeek.SUNDAY, 1);\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__js_joda_core__;","module.exports = __WEBPACK_EXTERNAL_MODULE_cldr_data__;","module.exports = __WEBPACK_EXTERNAL_MODULE_cldrjs__;"],"sourceRoot":""}